{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"NT9833X_MD_User_Guide_en.html","text":"NT9833X MD User Guide 1 Introduction \u00b6 1.1 Overview \u00b6 The motion detection supports applications including global motion detection, sub-region motion detection, motion object detection and tamper detection. l Global motion detection By using a fixed camera, global motion detection issues alarm if the area of moving objects is larger than the user-defined threshold. Figure 1? Global motion detection l Sub-region motion detection By using a fixed camera, this function issues a sub-region motion alarm if the area of moving objects in the user-defined regions is larger than the user-defined threshold. Figure 2? Sub-region motion alarm l Motion objects detection By using a fixed camera, it detects moving objects if their areas are larger than a user-defined threshold.? It also reports the sizes and coordinates of detected moving objects. Figure 3? Motion objects detection l Tamper detection By using a fixed camera, it issues a tamper alarm if the occlusion area is larger than a user-defined area threshold. Figure 4: Tamper Detection 1.2 Motion detection steps \u00b6 The steps of motion detection functions are Step. 1: Generating a initial background model by using the first few frames. Step. 2: Micro block (MB) map is used in motion detection. The size of each MB can be 32x32 or 16x16. The algorithm determines a MB as a motion block if the variance of blocks is higher than a predefined threshold. Step. 3: Updating the background model by using current frame information. Figure 5. The flowchart of MD algoritm 1.3 Process Flow \u00b6 Figure 6. The process flow of MD 1.4 Parameters \u00b6 MD has two major parameter types, as listed below l The parameters of vendor MD are used to control MD hardware. l The parameters of libmd are used to control MD software application. l Please notice that the parameters of vendor MD should be set before setting the parameters of libmd. 1.4.1 Parameters of vendor MD \u00b6 l VENDOR_MD_CTRL: trigger setting of MD hardware Parameter Range Comment Value engine_enabled 0, 1 HW trigger setting 0: close 1: open l VENDOR_MD_MDT_INFO: size information of MD hardware Parameter Range Comment Value phy_width 32~3840 Sensor resolution (width) \u2013 phy_height 16~2160 Sensor resolution (height) \u2013 phy_mb_x_size 16, 32 The x-size of micro-block (MB) for HW Set 32 when the phy_height is bigger than 1088. Set 16 when the phy_height is smaller than or equal to 1088. phy_mb_y_size 16, 32 The y-size of MB for HW Same value of phy_mb_x_size. phy_mb_x_num The number of MB in the MB-map at x-direction phy_width/ phy_mb_x_size phy_mb_y_num The number of MB in the MB-map at y-direction phy_height/ phy_mb_y_size l VENDOR_MD_MDT_PARAM_IDX: index of MD background model parameters id Comment VENDOR_MD_MDT_PARAM_RST Background model reset VENDOR_MD_MDT_PARAM_TYPE The method to construct background model VENDOR_MD_MDT_PARAM_TIME_PERIOD update time of background model (only for MD2) VENDOR_MD_MDT_PARAM_TBG Weight threshold of background model VENDOR_MD_MDT_PARAM_LVL_ALPHA Learning rate for the fitting background model VENDOR_MD_MDT_PARAM_LVL_ONE_MIN_ALPHA Learning rate for the nun-fitting background model VENDOR_MD_MDT_PARAM_LVL_INIT_WEIGHT Initial weight of background model VENDOR_MD_MDT_PARAM_LVL_MODEL_UPDATE Update constraint of background model VENDOR_MD_MDT_PARAM_LVL_TB Threshold of foreground detection VENDOR_MD_MDT_PARAM_LVL_SIGMA Variance threshold of background model VENDOR_MD_MDT_PARAM_LVL_TG Threshold of background model update VENDOR_MD_MDT_PARAM_LVL_PRUNE Threshold to decrease weight for nun-fitting background model VENDOR_MD_MDT_PARAM_LVL_LUMA_DIFF_THRES Luminance variance threshold at refine stage (only for MD1) VENDOR_MD_MDT_PARAM_LVL_TEXT_DIFF_THRES Texture variance threshold at refine stage (only for MD1) VENDOR_MD_MDT_PARAM_LVL_TEXT_THRES Texture strength threshold at refine stage (only for MD1) VENDOR_MD_MDT_PARAM_LVL_TEXT_RATIO_THRES Texture coverage ratio threshold at refine stage (only for MD1) VENDOR_MD_MDT_PARAM_LVL_GM_MD2_THRES Background threshold (only for MD2) l VENDOR_MD_MDT_PARAM: parameters of MD background model Parameter Comment out_id Path id level Choose the selective model id VENDOR_MD_MDT_PARAM_IDX value Parameter value l Value range of the VENDOR_MD_MDT_PARAM VENDOR_MD_MDT_PARAM_IDX Range Comment Value VENDOR_MD_MDT_PARAM_RST 0, 1 Reset MD background model 0: no reset 1: reset VENDOR_MD_MDT_PARAM_TYPE 0, 1 MD method type 0: MD1 (HW) (learning-based) 1: MD2 (HW) difference-based) VENDOR_MD_MDT_PARAM_TIME_PERIOD - Background update frame threshold (only for MD2) 10 VENDOR_MD_MDT_PARAM_TBG 1~32767 Background model weight threshold Suggest not to modify the value. 29490 VENDOR_MD_MDT_PARAM_LVL_ALPHA 1~32767 Background learning rate threshold when input fits model. Please set higher value when AE change obviously to avoid false alarm. 32 VENDOR_MD_MDT_PARAM_LVL_ONE_MIN_ALPHA 1~32767 Background learning rate threshold when input doesn\u2019t fit model. 32736 VENDOR_MD_MDT_PARAM_LVL_INIT_WEIGHT 1~32767 Background model initial weight 32 VENDOR_MD_MDT_PARAM_LVL_MODEL_UPDATE 0, 1 Background model constraint update Suggest not to modify the value. 0 VENDOR_MD_MDT_PARAM_LVL_TB 1~31 Background model fitting threshold. The MD is more sensitive when the value is lower. 25 VENDOR_MD_MDT_PARAM_LVL_SIGMA 1~31 Background model variance threshold. Set larger value to avoid false alarm when background luminance changes large. Please set the value lower when the MD result of detected object is broken. 25 VENDOR_MD_MDT_PARAM_LVL_TG 1~31 Background model count threshold. Suggest not to modify the value. 9 VENDOR_MD_MDT_PARAM_LVL_PRUNE 1~32767 Weight decrease threshold for un-fitting model 51 VENDOR_MD_MDT_PARAM_LVL_LUMA_DIFF_THRES 0~255 Luminance variance threshold at refine stage (only for MD1) 0 VENDOR_MD_MDT_PARAM_LVL_TEXT_DIFF_THRES 0~255 Texture variance threshold at refine stage (only for MD1) 0 VENDOR_MD_MDT_PARAM_LVL_TEXT_THRES 0~255 Texture strength threshold at refine stage (only for MD1) 0 VENDOR_MD_MDT_PARAM_LVL_TEXT_RATIO_THRES 0~127 Texture coverage ratio threshold at refine stage (only for MD1) 127 VENDOR_MD_MDT_PARAM_LVL_GM_MD2_THRES 0~255 Background threshold (only for MD2) 10 l VENDOR_MD_MDT_MB_LEVEL: region setting of the background model Parameter Range Comment x 0~max_width x position of the left upper corner of the region (physical plane, Unit: pixel) y 0~max_height y position of the left upper corner of the region (physical plane, Unit: pixel) width 1~max_width width of the left upper corner of the region (physical plane, Unit: pixel) height 1~max_height height of the left upper corner of the region (physical plane, Unit: pixel) level 0~3 The selective background model of the region l VENDOR_MD_TDT_PARAM_IDX: index of the tamper detection parameters id Comment VENDOR_MD_TDT_PARAM_TYPE Tamper detection method type VENDOR_MD_TDT_PARAM_EDGE_TEX_THRES Texture strength threshold VENDOR_MD_TDT_PARAM_EDGE_WIN_THRES Coverage of low texture strength threshold VENDOR_MD_TDT_PARAM_AVG_TEX_THRES Luminance strength threshold VENDOR_MD_TDT_PARAM_AVG_WIN_THRES Coverage of low luminance strength threshold l VENDOR_MD_MDT_PARAM: tamper detection parameters Parameter Comment out_id Path id id VENDOR_MD_TDT_PARAM_IDX value Parameter value l Value range of the tamper detection parameters VENDOR_MD_TDT_PARAM_IDX Range Comment Default VENDOR_MD_TDT_PARAM_TYPE 0, 1 Tamper detection method 0: edge-based 1: intensity based VENDOR_MD_TDT_PARAM_EDGE_TEX_THRES 0~255 Texture strength threshold 25 VENDOR_MD_TDT_PARAM_EDGE_WIN_THRES 0~127 Coverage of low texture strength threshold 100 VENDOR_MD_TDT_PARAM_AVG_TEX_THRES 0~255 Luminance strength threshold 65 VENDOR_MD_TDT_PARAM_AVG_WIN_THRES 0~127 Coverage of low luminance strength threshold 100 l VENDOR_BUFFER : buffer information structure Parameter Comment paddr Physical address size Buffer size ddr_id DDR_IDX l VENDOR_MD_BUFFER: buffer information of MD hardware Parameter Comment mb_x_num_max Maximum width of the MB number(Unit: MB number) mb_y_num_max Maximum height of the MB number(Unit: MB number) sta MD HW statistics value buffer event MD HWmotion bitmap buffer level MD HW selective background model buffer l VENDOR_MD_PARAM_ID: index of vendor_md function id Comment VENDOR_MD_CTRL_PARAM MD HW control structure VENDOR_MD_MOTION_DETECT_INFO MD HW process size unit structure VENDOR_MD_MOTION_DETECT_PARAM MD HW background model parameter structure VENDOR_MD_MOTION_DETECT_MB_LEVEL MD HW background model selective model structure VENDOR_MD_MOTION_DETECT_BUFFER MD HW buffer structure VENDOR_MD_TAMPER_DETECT_PARAM MD HW tamper parameter structure VENDOR_MD_RESULT_INFO MD HW result structure VENDOR_MD_REASSIGN_BUFFERS MD reassign buffer API. When max MB num is larger than (1920/16, 1080/16) or want to shrink MD buffer size. Note: hdal default pool buffer size for MD is (120,67) and 8 channel. If you use reassign buffer, you should change the hdal default pool buffer size. 1.4.2 Parameters of libmd \u00b6 l LIB_MD_AP_ENABLE: trigger setting of MD application:? Parameter Range Comment globel_md_alarm_detect_en 0, 1 Global motion alarm enable subregion_md_alarm_detect_en 0, 1 Sub-region motion alarm enable md_obj_detect_en 0, 1 Objects detection enable md_postprocess_en 0, 1 Motionbitmap postprocess enable l LIB_MD_EVT_INFO: results of motion detection Parameter Comment p_evt_map MD HW event bimap buffer evt_sz MD HW event bimap buffer size timestamp MD event timestamp l LIB_MD_MDT_INFO: size setting information of libmd Parameter Range Comment Default md_enabled 0, 1 Libmd enable vendor_md engine_enabled should be enable firstly vp_width 1~3840 User plane width suggest to set as sensor setting vp_height 1~2160 User plane height suggest to set as sensor setting vp_mb_x_size 16, 32 Width of MB size in the user plane suggest to set the same value of phy_mb_x_size vp_mb_y_size 16, 32 Height of MB size in the user plane suggest to set the same value of phy_mb_y_size vp_mb_x_num - Width of MB number in the user plane vp_width / vp_mb_x_size vp_mb_y_num - Height of MB number in the user plane vp_height / vp_mb_y_size phy_mb_x_size 16, 32 HW width of MB size set the same as vendor_md phy_mb_y_size 16, 32 HW height of MB size set the same as vendor_md phy_mb_x_num Sensor_width/ phy_mb_x_size set the same as vendor_md phy_mb_y_num Sensor_height/ phy_mb_y_size set the same as vendor_md l LIB_MD_AP_POSTPROCESS: post-process type of libmd event Parameter Range Comment Default evt_postprocess_type 0~7 Motion event postprocess 0: no 1: one erosion + two dilation 2: two dilation + one erosion 3: two dilation 4: one dilation 5: one erosion 6: one dilation + one erosion 7: one erosion + one dilation l LIB_MD_AP_GLOBAL_MOTION_ALARM: parameters of global motion alarm detection Parameter Range Comment motion_alarm_th 0~100 Global motion detection alarm area coverage ratio threshold (%). MD is more sensitive when the value is lower. ref_cell_en 0, 1 The detection result will reference p_cell_map or not. When the value is 1, the global motion alarm/ sub-region motion alarm/ object detection result will reference the p_cell_map. p_cell_map 0, 1 The detection result will reference the buffer when the ref_cell_en=1. cell_map_sz vp_mb_x_num* vp_mb_y_num The buffer size of the p_cell_map l LIB_MD_AP_SUBREGION: parameters of specified sub-region structure Parameter Range Comment enabled 0, 1 Sub-region motion detection alarm enable x_start 0~mb_w_num-1 x position of the left upper corner of the region (virtual plane\uff0cUnit: macro block) y_start 0~mb_h_num-1 y position of the left upper corner of the region (virtual plane\uff0cUnit: macro block) x_end 0~mb_w_num-1 x position of the right under corner of the region (virtual plane\uff0cUnit: macro block) y_end 0~mb_h_num-1 y position of the right under corner of the region (virtual plane\uff0cUnit: macro block) alarm_th 0~100 Sub-region motion detection alarm area coverage ratio threshold (%). MD is more sensitive when the value is lower. l LIB_MD_AP_SUBREGION_MOTION_ALARM: parameters of sub-region motion alarm detection Parameter Range Comment sub_region_num 0~4 Specified sub-region number sub_region - Specified sub-region structure l LIB_MD_AP_OBJ: size setting of minmum motion object Parameter Range Comment object_size - Minimum size of detected moing objects (Unit: macro block) l LIB_MD_AP_OBJ_INFO: information of motion objects Parameter Range Comment start_x 0~ vp_width x position of the left upper corner of the motion object (virtual plane\uff0cUnit:pixel) start_y 0~vp_height y position of the left upper corner of the motion object (virtual plane\uff0cUnit:pixel) end_x 0~ vp_width x position of the right under corner of the motion object (virtual plane\uff0cUnit: macro block) end_y 0~vp_height y position of the right under corner of the motion object (virtual plane\uff0cUnit: macro block) label 0~128 Motion obect index l LIB_MD_MDT_RESULT_INFO: results information of the libmd Parameter Range Comment Value global_motion_alarm 0, 1 Global motion detection alarm 0: no alarm 1: alarm global_motion_alarm_num 0~ vp_mb_x_num* vp_mb_y_num Motion MB number sub_motion_alarm 0, 1 Sub-region motion detection alarm 0: no alarm 1: alarm obj_num 0~128 Motion object number obj - Motion object structure vp_evt_info - Motion detection event map in the user plane l LIB_MD_PARAM_ID: index of libmd function Parameter Comment LIB_MD_MOTION_DETECT_INFO Libmd set virtual/physical plane evt bitmap addr. Physical plane should be set the same as vendor_md. Physical evt bitmap address is vendor_md output result motion bitmap address. evt bitmap addr\u70bavendor_md output result Libmd all detection application enable port LIB_MD_AP_ENABLE_PARAM Libmd postprocess enable LIB_MD_AP_POSTPROCESS_PARAM Libmd global motion detection enable LIB_MD_AP_GLOBAL_MOTION_ALARM_PARAM Libmd sub-region motion detection enable LIB_MD_AP_SUBREGION_MOTION_ALARM_PARAM Libmd motion object detection enable LIB_MD_AP_OBJ_PARAM Libmd result information Note: The MD model can lean the stable change of scene, such as river or twinkle light. If the user want to detect this kind of events, the parameters can be set as following: l Model parameters o tg=3 o tb=19 o alpha = 1024 l Refine process o lum_diff_th=75 o tex_diff_th=50 o tex_ratio_th=50 1.5 Initilization of MD \u00b6 l Vendor MD The buffer of vender MD and HW internal parametesrs should be set by the API as following: HD_RESULT md_init(void) ; l Libmd The buffer of libmd and software parametesrs should be set by the API as following: HD_RESULT motion_set_ap_param(UINT32 path_id) ; HD_RESULT lib_md_init(HD_PATH_ID path_id); // libmd buffer setting shoule be set after HW MD size setting which set through motion_set_ap_param. 1.6 Parameters Setting of MD \u00b6 l Vendor MD Vendor MD parameters should be set by the following API. ret = vendor_md_set(video_cap[ch], VENDOR_MD_CTRL_PARAM, &md_cfg); The content of VENDOR_MD_PARAM_ID is list in the section1.4.1. l Libmd The parameters of libmd should be set by the following API. ret = lib_md_set(path_id, LIB_MD_AP_ENABLE_PARAM, &mdt_lib_param[idx].mdt_enable); The content of LIB_MD_PARAM_ID is list in the section1.4.2. 1.7 Execution of MD \u00b6 1.7.1 vendor MD \u00b6 Vendor MD application should be set by the following API. // buffer and parameters intial setting HD_RESULT md_init(void); // create md_thread static void *md_thread(void *arg); //set and get vendor md API ret = vendor_md_get(path_id, VENDOR_MD_MOTION_DETECT_INFO, &mdt_info); ret = vendor_md_set(path_id, VENDOR_MD_RESULT_INFO, &result_info); ret = vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info); 1.7.2 libmd \u00b6 libmd application should be set by the following API. // buffer and parameters intial setting HD_RESULT motion_set_ap_param(UINT32 path_id); HD_RESULT lib_md_init(HD_PATH_ID path_id); // create md_thread static void *md_thread(void *arg); //set and get libmd API ret = vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info); //libmd process should use vendor_md result as input vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info) ret = lib_md_set(path_id, LIB_MD_MOTION_DETECT_INFO, &lib_md_info); ret = lib_md_get(path_id, LIB_MD_RESULT_INFO, &lib_md_rst); 1.8 Requirement of MD \u00b6 l MD funtions only be applied by CPU and HW. 1.9 Limitation of MD \u00b6 l MD shoud be used in the fixed-camera. If camera has been moved, MD function might output a false alarm event. l MD function might output a false alarm event because of the zoom in/out of camera or the adjustment of auto white balance. l The size of moving object should be larger than 1 micro-block (MB) 1.10 Test Flow of MD \u00b6 l Check MD use in the fixed-camera scene l Check MD event bitmap to check MD flow l MD should be used after 3 frames to create initial background. 2 Output \u00b6 2.1 Get Output Results of MD \u00b6 l vendor MD Vendor MD result should be set/got by the following API. ret = vendor_md_set(path_id, VENDOR_MD_RESULT_INFO, &result_info); ret = vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info); The structure of MD hardware result lists as following. typedef struct _VENDOR_MD_MDT_RESULT_INFO { UINT8???? ? *p_evt_map; ///< motion detection bitmap, size is evt_sz UINT32????? evt_sz; ///< phy_mb_x_num*phy_mb_y_num MB UINT8?????? tp_result; ///< tamper alarm ???? UINT32??? ? timestamp; } VENDOR_MD_MDT_RESULT_INFO; l libmd libmd result should be set/got by the following API. vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info) ret = lib_md_set(path_id, LIB_MD_MOTION_DETECT_INFO, &lib_md_info); ret = lib_md_get(path_id, LIB_MD_RESULT_INFO, &lib_md_rst); libmd result structure lists as following. typedef struct _LIB_MD_MDT_RESULT_INFO { UINT8???????? global_motion_alarm; ///< global motion alarm ???? UINT32??? ??? global_motion_alarm_num;?????? ???? ?????????///< global motion alarm num UINT32??????? sub_motion_alarm[LIB_MD_MAX_SUB_REGION_NUM]; ///< sub-region motion alarm UINT32??????? obj_num; ///< detect object number (max=128) ???? LIB_MD_AP_OBJ_INFO? obj[LIB_MD_MAX_OBJ_NUM];?????????? ????///< detect object info ???? LIB_MD_EVT_INFO vp_evt_info; } LIB_MD_MDT_RESULT_INFO; typedef struct _LIB_MD_EVT_INFO { UINT8???? ?? *p_evt_map; ///< motion detection bitmap, size is evt_sz UINT32?????? evt_sz; ///< mb_x_num*mb_y_num MB ???? UINT32??? ?? timestamp; } LIB_MD_EVT_INFO; typedef struct _LIB_MD_AP_OBJ_INFO { UINT32??????? start_x; ///< obj rectangle left upper x position (virtual pixel)? UINT32??????? start_y; ///< obj rectangle left upper y position (virtual pixel)? UINT32??????? end_x; ///< obj rectangle right down x position (virtual pixel)? UINT32??????? end_y; ///< obj rectangle right down y position (virtual pixel)? UINT32??????? label; ///< obj label } LIB_MD_AP_OBJ_INFO; 2.2 Print Output Results of MD \u00b6 l Output Result of Global Motion Detection UART will print the results as following when motion area in the whole scene is larger than user-defined threshold. > global motion alarm on ch (specified channel) . l Output Result of Sub-region Motion Detection UART will print the results as following when the motion area in one or more sub-regions is larger than user-defined threshold. > sub_region[ specified region index ] motion alarm on ch( specified channel ) . l Output Result of Motion Object Detection UART will print the results as following when motion objects area are larger than minimum object user-defined threshold. > obj num:Motion object number and obj[object index]: start_xy=[left upper corner position of motion object], end_xy = [right under corner position of motion object], label = object label. l Output Result of Tamper Detection UART will print the results as following when occlusion area is larger than user-defined threshold. > tamper_result: 1 on ch (specified channel) . 2.3 Limitation MD Hardware \u00b6 l Maximum sensor resolution is 3840x2160. l Maximum MB number of MD hardware are (mb_x_num, mb_y_num) = (256, 128) and minimum MB number of MD hardware are (mb_x_num, mb_y_num) = (2, 1). l In the Vcap flow, MD doesn\u2019t support the scale function. 2.4 Requirement of MD System \u00b6 l The efficiency of MD function is associated with system loading. The ouput result of MD may be delayed when system is overloading. 2.5 Tuning of MD Parameters \u00b6 l In the scene with the shortly changing of light, such as AE adjustment or turn-on and turn-off the light, please set the value of alpha higher. The side effect is that moving slowly object might be detected as background. l Please set tb to be higher for shadow. The side effect is that the detected forground of moving obeject might be broken. In this case, please also set \u201csigma\u201d to be lower to fix the broken forground issue. l The distance between moving object and camera should be farer than 30 cm. If the moving objects is too close to the camera, there might cause the false alarm of shadow. l Please set lower tb when foreground luminance is similar background. However, the side effect is that the false alarm of shadow may be increase. l Please see section 1.5 when you need to detect stable motion case. l The MD function doesn\u2019t support night view with IR-cut. In this case, there might be similar between background and foreground. l There is no motion event when MD is creating intial background model. Also, MD will need longer time to create initial backgroung model if there are some moving objects in the initial scene. l The size of moving object should be larger than 1 MB. 3 Q&A \u00b6 (1) How to check vendor MD version? Ans: echo md > /proc/hdal/flow Execute AP cat /proc/hdal/flow (2) How to set the md sensitive? Ans: I. Use vendor_md_set API (the details describe in the 1.6 section and the section 1.4.1. II. Tuning Guide document provide the tuning parameter suggestion. If any more question, please provide the video and parameters. (3) How to solve sensor resolution change error? Ans: If you want to chage sensor reolution, please vendor_md_unint & vendor_md_int at fisrt and you might see liveview_with_md_ctrl.c or liveview_with_md_resolution.c (4) How to check sensor interlace case? Ans: MD is field input. If input is interlace, please set the half of the sensor input height. You can see interlace case through command as following cat /proc/vcap316/vcap0/vg_info. (5) Check AD mode (960H and 720) case Ans: I. Check AD output is full frame. II. MD input size is the same as the AD output size. phy_width andphy_height should be calculate by AD output (might not be the size of sensor). The size setting check by /proc/vcap316/vcap0/vg_info?and vcap md (detal describe in question 6 ). (6) If any setting question of the vendor_md flow, please provide the log of vendor_md flow by the following command. Ans: echo md > /proc/hdal/flow Execute AP cat /proc/hdal/flow (7) How to check vcap md setting Ans: echo vcap_ch > /proc/vcap316/vcap0/vcap0.CHIP/md/event (vcap_ch and CHIP according to vg_info) cat /proc/vcap316/vcap0/vcap0. CHIP /md/region cat /proc/vcap316/vcap0/vcap0. CHIP /md/param (8) How to solve the mb num >(120,67)? Ans: I. modify hdal excel buffer size setting II. open reassign_buffer (9) How to use the level setting ? Ans: Each MB can be setted different level. Each level is mapping the set of background model. In nomal scene, all scene use the same level. In the scene which include both indoor and outdoor, you can set two level of the scene. (10) Where is the tamper sample code? Ans: tamper sample code is liveview_with_md.c. 4 Revision History \u00b6 Revision Date Author Changes 0.1 2021/06/30 Sophia First formal version 0.2 2021/07/02 Sophia Update document format and description 0.3 2022/06/24 Hunter Modify the description of mb size and some wrong information.","title":"MD User Guide"},{"location":"NT9833X_MD_User_Guide_en.html#1-introduction","text":"","title":"1 Introduction"},{"location":"NT9833X_MD_User_Guide_en.html#11-overview","text":"The motion detection supports applications including global motion detection, sub-region motion detection, motion object detection and tamper detection. l Global motion detection By using a fixed camera, global motion detection issues alarm if the area of moving objects is larger than the user-defined threshold. Figure 1? Global motion detection l Sub-region motion detection By using a fixed camera, this function issues a sub-region motion alarm if the area of moving objects in the user-defined regions is larger than the user-defined threshold. Figure 2? Sub-region motion alarm l Motion objects detection By using a fixed camera, it detects moving objects if their areas are larger than a user-defined threshold.? It also reports the sizes and coordinates of detected moving objects. Figure 3? Motion objects detection l Tamper detection By using a fixed camera, it issues a tamper alarm if the occlusion area is larger than a user-defined area threshold. Figure 4: Tamper Detection","title":"1.1 Overview"},{"location":"NT9833X_MD_User_Guide_en.html#12-motion-detection-steps","text":"The steps of motion detection functions are Step. 1: Generating a initial background model by using the first few frames. Step. 2: Micro block (MB) map is used in motion detection. The size of each MB can be 32x32 or 16x16. The algorithm determines a MB as a motion block if the variance of blocks is higher than a predefined threshold. Step. 3: Updating the background model by using current frame information. Figure 5. The flowchart of MD algoritm","title":"1.2 Motion detection steps"},{"location":"NT9833X_MD_User_Guide_en.html#13-process-flow","text":"Figure 6. The process flow of MD","title":"1.3 Process Flow"},{"location":"NT9833X_MD_User_Guide_en.html#14-parameters","text":"MD has two major parameter types, as listed below l The parameters of vendor MD are used to control MD hardware. l The parameters of libmd are used to control MD software application. l Please notice that the parameters of vendor MD should be set before setting the parameters of libmd.","title":"1.4 Parameters"},{"location":"NT9833X_MD_User_Guide_en.html#141-parameters-of-vendor-md","text":"l VENDOR_MD_CTRL: trigger setting of MD hardware Parameter Range Comment Value engine_enabled 0, 1 HW trigger setting 0: close 1: open l VENDOR_MD_MDT_INFO: size information of MD hardware Parameter Range Comment Value phy_width 32~3840 Sensor resolution (width) \u2013 phy_height 16~2160 Sensor resolution (height) \u2013 phy_mb_x_size 16, 32 The x-size of micro-block (MB) for HW Set 32 when the phy_height is bigger than 1088. Set 16 when the phy_height is smaller than or equal to 1088. phy_mb_y_size 16, 32 The y-size of MB for HW Same value of phy_mb_x_size. phy_mb_x_num The number of MB in the MB-map at x-direction phy_width/ phy_mb_x_size phy_mb_y_num The number of MB in the MB-map at y-direction phy_height/ phy_mb_y_size l VENDOR_MD_MDT_PARAM_IDX: index of MD background model parameters id Comment VENDOR_MD_MDT_PARAM_RST Background model reset VENDOR_MD_MDT_PARAM_TYPE The method to construct background model VENDOR_MD_MDT_PARAM_TIME_PERIOD update time of background model (only for MD2) VENDOR_MD_MDT_PARAM_TBG Weight threshold of background model VENDOR_MD_MDT_PARAM_LVL_ALPHA Learning rate for the fitting background model VENDOR_MD_MDT_PARAM_LVL_ONE_MIN_ALPHA Learning rate for the nun-fitting background model VENDOR_MD_MDT_PARAM_LVL_INIT_WEIGHT Initial weight of background model VENDOR_MD_MDT_PARAM_LVL_MODEL_UPDATE Update constraint of background model VENDOR_MD_MDT_PARAM_LVL_TB Threshold of foreground detection VENDOR_MD_MDT_PARAM_LVL_SIGMA Variance threshold of background model VENDOR_MD_MDT_PARAM_LVL_TG Threshold of background model update VENDOR_MD_MDT_PARAM_LVL_PRUNE Threshold to decrease weight for nun-fitting background model VENDOR_MD_MDT_PARAM_LVL_LUMA_DIFF_THRES Luminance variance threshold at refine stage (only for MD1) VENDOR_MD_MDT_PARAM_LVL_TEXT_DIFF_THRES Texture variance threshold at refine stage (only for MD1) VENDOR_MD_MDT_PARAM_LVL_TEXT_THRES Texture strength threshold at refine stage (only for MD1) VENDOR_MD_MDT_PARAM_LVL_TEXT_RATIO_THRES Texture coverage ratio threshold at refine stage (only for MD1) VENDOR_MD_MDT_PARAM_LVL_GM_MD2_THRES Background threshold (only for MD2) l VENDOR_MD_MDT_PARAM: parameters of MD background model Parameter Comment out_id Path id level Choose the selective model id VENDOR_MD_MDT_PARAM_IDX value Parameter value l Value range of the VENDOR_MD_MDT_PARAM VENDOR_MD_MDT_PARAM_IDX Range Comment Value VENDOR_MD_MDT_PARAM_RST 0, 1 Reset MD background model 0: no reset 1: reset VENDOR_MD_MDT_PARAM_TYPE 0, 1 MD method type 0: MD1 (HW) (learning-based) 1: MD2 (HW) difference-based) VENDOR_MD_MDT_PARAM_TIME_PERIOD - Background update frame threshold (only for MD2) 10 VENDOR_MD_MDT_PARAM_TBG 1~32767 Background model weight threshold Suggest not to modify the value. 29490 VENDOR_MD_MDT_PARAM_LVL_ALPHA 1~32767 Background learning rate threshold when input fits model. Please set higher value when AE change obviously to avoid false alarm. 32 VENDOR_MD_MDT_PARAM_LVL_ONE_MIN_ALPHA 1~32767 Background learning rate threshold when input doesn\u2019t fit model. 32736 VENDOR_MD_MDT_PARAM_LVL_INIT_WEIGHT 1~32767 Background model initial weight 32 VENDOR_MD_MDT_PARAM_LVL_MODEL_UPDATE 0, 1 Background model constraint update Suggest not to modify the value. 0 VENDOR_MD_MDT_PARAM_LVL_TB 1~31 Background model fitting threshold. The MD is more sensitive when the value is lower. 25 VENDOR_MD_MDT_PARAM_LVL_SIGMA 1~31 Background model variance threshold. Set larger value to avoid false alarm when background luminance changes large. Please set the value lower when the MD result of detected object is broken. 25 VENDOR_MD_MDT_PARAM_LVL_TG 1~31 Background model count threshold. Suggest not to modify the value. 9 VENDOR_MD_MDT_PARAM_LVL_PRUNE 1~32767 Weight decrease threshold for un-fitting model 51 VENDOR_MD_MDT_PARAM_LVL_LUMA_DIFF_THRES 0~255 Luminance variance threshold at refine stage (only for MD1) 0 VENDOR_MD_MDT_PARAM_LVL_TEXT_DIFF_THRES 0~255 Texture variance threshold at refine stage (only for MD1) 0 VENDOR_MD_MDT_PARAM_LVL_TEXT_THRES 0~255 Texture strength threshold at refine stage (only for MD1) 0 VENDOR_MD_MDT_PARAM_LVL_TEXT_RATIO_THRES 0~127 Texture coverage ratio threshold at refine stage (only for MD1) 127 VENDOR_MD_MDT_PARAM_LVL_GM_MD2_THRES 0~255 Background threshold (only for MD2) 10 l VENDOR_MD_MDT_MB_LEVEL: region setting of the background model Parameter Range Comment x 0~max_width x position of the left upper corner of the region (physical plane, Unit: pixel) y 0~max_height y position of the left upper corner of the region (physical plane, Unit: pixel) width 1~max_width width of the left upper corner of the region (physical plane, Unit: pixel) height 1~max_height height of the left upper corner of the region (physical plane, Unit: pixel) level 0~3 The selective background model of the region l VENDOR_MD_TDT_PARAM_IDX: index of the tamper detection parameters id Comment VENDOR_MD_TDT_PARAM_TYPE Tamper detection method type VENDOR_MD_TDT_PARAM_EDGE_TEX_THRES Texture strength threshold VENDOR_MD_TDT_PARAM_EDGE_WIN_THRES Coverage of low texture strength threshold VENDOR_MD_TDT_PARAM_AVG_TEX_THRES Luminance strength threshold VENDOR_MD_TDT_PARAM_AVG_WIN_THRES Coverage of low luminance strength threshold l VENDOR_MD_MDT_PARAM: tamper detection parameters Parameter Comment out_id Path id id VENDOR_MD_TDT_PARAM_IDX value Parameter value l Value range of the tamper detection parameters VENDOR_MD_TDT_PARAM_IDX Range Comment Default VENDOR_MD_TDT_PARAM_TYPE 0, 1 Tamper detection method 0: edge-based 1: intensity based VENDOR_MD_TDT_PARAM_EDGE_TEX_THRES 0~255 Texture strength threshold 25 VENDOR_MD_TDT_PARAM_EDGE_WIN_THRES 0~127 Coverage of low texture strength threshold 100 VENDOR_MD_TDT_PARAM_AVG_TEX_THRES 0~255 Luminance strength threshold 65 VENDOR_MD_TDT_PARAM_AVG_WIN_THRES 0~127 Coverage of low luminance strength threshold 100 l VENDOR_BUFFER : buffer information structure Parameter Comment paddr Physical address size Buffer size ddr_id DDR_IDX l VENDOR_MD_BUFFER: buffer information of MD hardware Parameter Comment mb_x_num_max Maximum width of the MB number(Unit: MB number) mb_y_num_max Maximum height of the MB number(Unit: MB number) sta MD HW statistics value buffer event MD HWmotion bitmap buffer level MD HW selective background model buffer l VENDOR_MD_PARAM_ID: index of vendor_md function id Comment VENDOR_MD_CTRL_PARAM MD HW control structure VENDOR_MD_MOTION_DETECT_INFO MD HW process size unit structure VENDOR_MD_MOTION_DETECT_PARAM MD HW background model parameter structure VENDOR_MD_MOTION_DETECT_MB_LEVEL MD HW background model selective model structure VENDOR_MD_MOTION_DETECT_BUFFER MD HW buffer structure VENDOR_MD_TAMPER_DETECT_PARAM MD HW tamper parameter structure VENDOR_MD_RESULT_INFO MD HW result structure VENDOR_MD_REASSIGN_BUFFERS MD reassign buffer API. When max MB num is larger than (1920/16, 1080/16) or want to shrink MD buffer size. Note: hdal default pool buffer size for MD is (120,67) and 8 channel. If you use reassign buffer, you should change the hdal default pool buffer size.","title":"1.4.1 Parameters of vendor MD"},{"location":"NT9833X_MD_User_Guide_en.html#142-parameters-of-libmd","text":"l LIB_MD_AP_ENABLE: trigger setting of MD application:? Parameter Range Comment globel_md_alarm_detect_en 0, 1 Global motion alarm enable subregion_md_alarm_detect_en 0, 1 Sub-region motion alarm enable md_obj_detect_en 0, 1 Objects detection enable md_postprocess_en 0, 1 Motionbitmap postprocess enable l LIB_MD_EVT_INFO: results of motion detection Parameter Comment p_evt_map MD HW event bimap buffer evt_sz MD HW event bimap buffer size timestamp MD event timestamp l LIB_MD_MDT_INFO: size setting information of libmd Parameter Range Comment Default md_enabled 0, 1 Libmd enable vendor_md engine_enabled should be enable firstly vp_width 1~3840 User plane width suggest to set as sensor setting vp_height 1~2160 User plane height suggest to set as sensor setting vp_mb_x_size 16, 32 Width of MB size in the user plane suggest to set the same value of phy_mb_x_size vp_mb_y_size 16, 32 Height of MB size in the user plane suggest to set the same value of phy_mb_y_size vp_mb_x_num - Width of MB number in the user plane vp_width / vp_mb_x_size vp_mb_y_num - Height of MB number in the user plane vp_height / vp_mb_y_size phy_mb_x_size 16, 32 HW width of MB size set the same as vendor_md phy_mb_y_size 16, 32 HW height of MB size set the same as vendor_md phy_mb_x_num Sensor_width/ phy_mb_x_size set the same as vendor_md phy_mb_y_num Sensor_height/ phy_mb_y_size set the same as vendor_md l LIB_MD_AP_POSTPROCESS: post-process type of libmd event Parameter Range Comment Default evt_postprocess_type 0~7 Motion event postprocess 0: no 1: one erosion + two dilation 2: two dilation + one erosion 3: two dilation 4: one dilation 5: one erosion 6: one dilation + one erosion 7: one erosion + one dilation l LIB_MD_AP_GLOBAL_MOTION_ALARM: parameters of global motion alarm detection Parameter Range Comment motion_alarm_th 0~100 Global motion detection alarm area coverage ratio threshold (%). MD is more sensitive when the value is lower. ref_cell_en 0, 1 The detection result will reference p_cell_map or not. When the value is 1, the global motion alarm/ sub-region motion alarm/ object detection result will reference the p_cell_map. p_cell_map 0, 1 The detection result will reference the buffer when the ref_cell_en=1. cell_map_sz vp_mb_x_num* vp_mb_y_num The buffer size of the p_cell_map l LIB_MD_AP_SUBREGION: parameters of specified sub-region structure Parameter Range Comment enabled 0, 1 Sub-region motion detection alarm enable x_start 0~mb_w_num-1 x position of the left upper corner of the region (virtual plane\uff0cUnit: macro block) y_start 0~mb_h_num-1 y position of the left upper corner of the region (virtual plane\uff0cUnit: macro block) x_end 0~mb_w_num-1 x position of the right under corner of the region (virtual plane\uff0cUnit: macro block) y_end 0~mb_h_num-1 y position of the right under corner of the region (virtual plane\uff0cUnit: macro block) alarm_th 0~100 Sub-region motion detection alarm area coverage ratio threshold (%). MD is more sensitive when the value is lower. l LIB_MD_AP_SUBREGION_MOTION_ALARM: parameters of sub-region motion alarm detection Parameter Range Comment sub_region_num 0~4 Specified sub-region number sub_region - Specified sub-region structure l LIB_MD_AP_OBJ: size setting of minmum motion object Parameter Range Comment object_size - Minimum size of detected moing objects (Unit: macro block) l LIB_MD_AP_OBJ_INFO: information of motion objects Parameter Range Comment start_x 0~ vp_width x position of the left upper corner of the motion object (virtual plane\uff0cUnit:pixel) start_y 0~vp_height y position of the left upper corner of the motion object (virtual plane\uff0cUnit:pixel) end_x 0~ vp_width x position of the right under corner of the motion object (virtual plane\uff0cUnit: macro block) end_y 0~vp_height y position of the right under corner of the motion object (virtual plane\uff0cUnit: macro block) label 0~128 Motion obect index l LIB_MD_MDT_RESULT_INFO: results information of the libmd Parameter Range Comment Value global_motion_alarm 0, 1 Global motion detection alarm 0: no alarm 1: alarm global_motion_alarm_num 0~ vp_mb_x_num* vp_mb_y_num Motion MB number sub_motion_alarm 0, 1 Sub-region motion detection alarm 0: no alarm 1: alarm obj_num 0~128 Motion object number obj - Motion object structure vp_evt_info - Motion detection event map in the user plane l LIB_MD_PARAM_ID: index of libmd function Parameter Comment LIB_MD_MOTION_DETECT_INFO Libmd set virtual/physical plane evt bitmap addr. Physical plane should be set the same as vendor_md. Physical evt bitmap address is vendor_md output result motion bitmap address. evt bitmap addr\u70bavendor_md output result Libmd all detection application enable port LIB_MD_AP_ENABLE_PARAM Libmd postprocess enable LIB_MD_AP_POSTPROCESS_PARAM Libmd global motion detection enable LIB_MD_AP_GLOBAL_MOTION_ALARM_PARAM Libmd sub-region motion detection enable LIB_MD_AP_SUBREGION_MOTION_ALARM_PARAM Libmd motion object detection enable LIB_MD_AP_OBJ_PARAM Libmd result information Note: The MD model can lean the stable change of scene, such as river or twinkle light. If the user want to detect this kind of events, the parameters can be set as following: l Model parameters o tg=3 o tb=19 o alpha = 1024 l Refine process o lum_diff_th=75 o tex_diff_th=50 o tex_ratio_th=50","title":"1.4.2 Parameters of libmd"},{"location":"NT9833X_MD_User_Guide_en.html#15-initilization-of-md","text":"l Vendor MD The buffer of vender MD and HW internal parametesrs should be set by the API as following: HD_RESULT md_init(void) ; l Libmd The buffer of libmd and software parametesrs should be set by the API as following: HD_RESULT motion_set_ap_param(UINT32 path_id) ; HD_RESULT lib_md_init(HD_PATH_ID path_id); // libmd buffer setting shoule be set after HW MD size setting which set through motion_set_ap_param.","title":"1.5 Initilization of MD"},{"location":"NT9833X_MD_User_Guide_en.html#16-parameters-setting-of-md","text":"l Vendor MD Vendor MD parameters should be set by the following API. ret = vendor_md_set(video_cap[ch], VENDOR_MD_CTRL_PARAM, &md_cfg); The content of VENDOR_MD_PARAM_ID is list in the section1.4.1. l Libmd The parameters of libmd should be set by the following API. ret = lib_md_set(path_id, LIB_MD_AP_ENABLE_PARAM, &mdt_lib_param[idx].mdt_enable); The content of LIB_MD_PARAM_ID is list in the section1.4.2.","title":"1.6 Parameters Setting of MD"},{"location":"NT9833X_MD_User_Guide_en.html#17-execution-of-md","text":"","title":"1.7 Execution of MD"},{"location":"NT9833X_MD_User_Guide_en.html#171-vendor-md","text":"Vendor MD application should be set by the following API. // buffer and parameters intial setting HD_RESULT md_init(void); // create md_thread static void *md_thread(void *arg); //set and get vendor md API ret = vendor_md_get(path_id, VENDOR_MD_MOTION_DETECT_INFO, &mdt_info); ret = vendor_md_set(path_id, VENDOR_MD_RESULT_INFO, &result_info); ret = vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info);","title":"1.7.1 vendor MD"},{"location":"NT9833X_MD_User_Guide_en.html#172-libmd","text":"libmd application should be set by the following API. // buffer and parameters intial setting HD_RESULT motion_set_ap_param(UINT32 path_id); HD_RESULT lib_md_init(HD_PATH_ID path_id); // create md_thread static void *md_thread(void *arg); //set and get libmd API ret = vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info); //libmd process should use vendor_md result as input vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info) ret = lib_md_set(path_id, LIB_MD_MOTION_DETECT_INFO, &lib_md_info); ret = lib_md_get(path_id, LIB_MD_RESULT_INFO, &lib_md_rst);","title":"1.7.2 libmd"},{"location":"NT9833X_MD_User_Guide_en.html#18-requirement-of-md","text":"l MD funtions only be applied by CPU and HW.","title":"1.8 Requirement of MD"},{"location":"NT9833X_MD_User_Guide_en.html#19-limitation-of-md","text":"l MD shoud be used in the fixed-camera. If camera has been moved, MD function might output a false alarm event. l MD function might output a false alarm event because of the zoom in/out of camera or the adjustment of auto white balance. l The size of moving object should be larger than 1 micro-block (MB)","title":"1.9 Limitation of MD"},{"location":"NT9833X_MD_User_Guide_en.html#110-test-flow-of-md","text":"l Check MD use in the fixed-camera scene l Check MD event bitmap to check MD flow l MD should be used after 3 frames to create initial background.","title":"1.10 Test Flow of MD"},{"location":"NT9833X_MD_User_Guide_en.html#2-output","text":"","title":"2 Output"},{"location":"NT9833X_MD_User_Guide_en.html#21-get-output-results-of-md","text":"l vendor MD Vendor MD result should be set/got by the following API. ret = vendor_md_set(path_id, VENDOR_MD_RESULT_INFO, &result_info); ret = vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info); The structure of MD hardware result lists as following. typedef struct _VENDOR_MD_MDT_RESULT_INFO { UINT8???? ? *p_evt_map; ///< motion detection bitmap, size is evt_sz UINT32????? evt_sz; ///< phy_mb_x_num*phy_mb_y_num MB UINT8?????? tp_result; ///< tamper alarm ???? UINT32??? ? timestamp; } VENDOR_MD_MDT_RESULT_INFO; l libmd libmd result should be set/got by the following API. vendor_md_get(path_id, VENDOR_MD_RESULT_INFO, &result_info) ret = lib_md_set(path_id, LIB_MD_MOTION_DETECT_INFO, &lib_md_info); ret = lib_md_get(path_id, LIB_MD_RESULT_INFO, &lib_md_rst); libmd result structure lists as following. typedef struct _LIB_MD_MDT_RESULT_INFO { UINT8???????? global_motion_alarm; ///< global motion alarm ???? UINT32??? ??? global_motion_alarm_num;?????? ???? ?????????///< global motion alarm num UINT32??????? sub_motion_alarm[LIB_MD_MAX_SUB_REGION_NUM]; ///< sub-region motion alarm UINT32??????? obj_num; ///< detect object number (max=128) ???? LIB_MD_AP_OBJ_INFO? obj[LIB_MD_MAX_OBJ_NUM];?????????? ????///< detect object info ???? LIB_MD_EVT_INFO vp_evt_info; } LIB_MD_MDT_RESULT_INFO; typedef struct _LIB_MD_EVT_INFO { UINT8???? ?? *p_evt_map; ///< motion detection bitmap, size is evt_sz UINT32?????? evt_sz; ///< mb_x_num*mb_y_num MB ???? UINT32??? ?? timestamp; } LIB_MD_EVT_INFO; typedef struct _LIB_MD_AP_OBJ_INFO { UINT32??????? start_x; ///< obj rectangle left upper x position (virtual pixel)? UINT32??????? start_y; ///< obj rectangle left upper y position (virtual pixel)? UINT32??????? end_x; ///< obj rectangle right down x position (virtual pixel)? UINT32??????? end_y; ///< obj rectangle right down y position (virtual pixel)? UINT32??????? label; ///< obj label } LIB_MD_AP_OBJ_INFO;","title":"2.1 Get Output Results of MD"},{"location":"NT9833X_MD_User_Guide_en.html#22-print-output-results-of-md","text":"l Output Result of Global Motion Detection UART will print the results as following when motion area in the whole scene is larger than user-defined threshold. > global motion alarm on ch (specified channel) . l Output Result of Sub-region Motion Detection UART will print the results as following when the motion area in one or more sub-regions is larger than user-defined threshold. > sub_region[ specified region index ] motion alarm on ch( specified channel ) . l Output Result of Motion Object Detection UART will print the results as following when motion objects area are larger than minimum object user-defined threshold. > obj num:Motion object number and obj[object index]: start_xy=[left upper corner position of motion object], end_xy = [right under corner position of motion object], label = object label. l Output Result of Tamper Detection UART will print the results as following when occlusion area is larger than user-defined threshold. > tamper_result: 1 on ch (specified channel) .","title":"2.2 Print Output Results of MD"},{"location":"NT9833X_MD_User_Guide_en.html#23-limitation-md-hardware","text":"l Maximum sensor resolution is 3840x2160. l Maximum MB number of MD hardware are (mb_x_num, mb_y_num) = (256, 128) and minimum MB number of MD hardware are (mb_x_num, mb_y_num) = (2, 1). l In the Vcap flow, MD doesn\u2019t support the scale function.","title":"2.3 Limitation MD Hardware"},{"location":"NT9833X_MD_User_Guide_en.html#24-requirement-of-md-system","text":"l The efficiency of MD function is associated with system loading. The ouput result of MD may be delayed when system is overloading.","title":"2.4 Requirement of MD System"},{"location":"NT9833X_MD_User_Guide_en.html#25-tuning-of-md-parameters","text":"l In the scene with the shortly changing of light, such as AE adjustment or turn-on and turn-off the light, please set the value of alpha higher. The side effect is that moving slowly object might be detected as background. l Please set tb to be higher for shadow. The side effect is that the detected forground of moving obeject might be broken. In this case, please also set \u201csigma\u201d to be lower to fix the broken forground issue. l The distance between moving object and camera should be farer than 30 cm. If the moving objects is too close to the camera, there might cause the false alarm of shadow. l Please set lower tb when foreground luminance is similar background. However, the side effect is that the false alarm of shadow may be increase. l Please see section 1.5 when you need to detect stable motion case. l The MD function doesn\u2019t support night view with IR-cut. In this case, there might be similar between background and foreground. l There is no motion event when MD is creating intial background model. Also, MD will need longer time to create initial backgroung model if there are some moving objects in the initial scene. l The size of moving object should be larger than 1 MB.","title":"2.5 Tuning of MD Parameters"},{"location":"NT9833X_MD_User_Guide_en.html#3-qa","text":"(1) How to check vendor MD version? Ans: echo md > /proc/hdal/flow Execute AP cat /proc/hdal/flow (2) How to set the md sensitive? Ans: I. Use vendor_md_set API (the details describe in the 1.6 section and the section 1.4.1. II. Tuning Guide document provide the tuning parameter suggestion. If any more question, please provide the video and parameters. (3) How to solve sensor resolution change error? Ans: If you want to chage sensor reolution, please vendor_md_unint & vendor_md_int at fisrt and you might see liveview_with_md_ctrl.c or liveview_with_md_resolution.c (4) How to check sensor interlace case? Ans: MD is field input. If input is interlace, please set the half of the sensor input height. You can see interlace case through command as following cat /proc/vcap316/vcap0/vg_info. (5) Check AD mode (960H and 720) case Ans: I. Check AD output is full frame. II. MD input size is the same as the AD output size. phy_width andphy_height should be calculate by AD output (might not be the size of sensor). The size setting check by /proc/vcap316/vcap0/vg_info?and vcap md (detal describe in question 6 ). (6) If any setting question of the vendor_md flow, please provide the log of vendor_md flow by the following command. Ans: echo md > /proc/hdal/flow Execute AP cat /proc/hdal/flow (7) How to check vcap md setting Ans: echo vcap_ch > /proc/vcap316/vcap0/vcap0.CHIP/md/event (vcap_ch and CHIP according to vg_info) cat /proc/vcap316/vcap0/vcap0. CHIP /md/region cat /proc/vcap316/vcap0/vcap0. CHIP /md/param (8) How to solve the mb num >(120,67)? Ans: I. modify hdal excel buffer size setting II. open reassign_buffer (9) How to use the level setting ? Ans: Each MB can be setted different level. Each level is mapping the set of background model. In nomal scene, all scene use the same level. In the scene which include both indoor and outdoor, you can set two level of the scene. (10) Where is the tamper sample code? Ans: tamper sample code is liveview_with_md.c.","title":"3 Q&amp;A"},{"location":"NT9833X_MD_User_Guide_en.html#4-revision-history","text":"Revision Date Author Changes 0.1 2021/06/30 Sophia First formal version 0.2 2021/07/02 Sophia Update document format and description 0.3 2022/06/24 Hunter Modify the description of mb size and some wrong information.","title":"4 Revision History"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html","text":"VPE IQ Tuning Guide 1 Overview \u00b6 Figure 1?1 NT9833x Video Flow VPE is an independent image processing engine in YUV domain, and it performs some pre-processing process before LCD display or encoder to improve the image quality. The related modules are as follows: l Spatial Noise Reduction Module(SPNR, using MRNR method) l Tempoarl Noise Reduction Module(TMNR) l Sharpen Module(SHP) l Scaling Module(SCA) \u203b The 9833x series has removed DCE and DCTG. \u203b In the following description, the area shown in blue is the same module as the 9831x series but the parameters are different. Please pay special attention) Figure 1?2 VPE Image Processing Flow 2 System Control \u00b6 The processing sequence of Sharpen, SPNR(using MRNR method) and TMNR is changeable, and user can change the processing sequence depends on different camera charateristic to achieve the best image quality. 2.1 Parameter Description \u00b6 Parameter Range Def Description ch_fd Video graph use ch_fd to represent the connected video engine of each channel. User can fine tune parameter of each video engine by setting ch_fd. pipe_mode 0~5 0 Set module processing sequence. 0 : MRNR -> TMNR -> Sharpen 1 : MRNR-> Sharpen -> TMNR 2 : Sharpen -> MRNR -> TMNR 3 : SHP->TMNR->MRNR 4 :?TMNR->MRNR->SHP 5 : TMNR->SHP->MRNR 2.2 Setting Interface \u00b6 2.2.1 Proc \u00b6 l /proc/videograph/vpe/ch_fd \u00b6 [Description] Read or write the current camera channel, and it only needs to set once, the following SHP, MRNR, TMNR parameters will work on this channel. The following proc command will list all ch_fd of the current video engine: [Command] Write : proc command Target Parameter echo [fd ] > /proc/videograph/vpe/ch_fd Fw Internal Pointer Read : cat /proc/videograph/vpe/ch_fd l /proc/videograph/vpe/pipe_mode \u00b6 [Description] Read or write the executing sequence of SHP, MRNR and TMNR. [Command] Write : proc command Target Parameter echo [pipe_mode ] > /proc/videograph/vpe/pipe_mode src_ppo_idx???????? mrnr_ppi_idx???? mrnr_ppo_idx??? tmnr_ppi_idx????? tmnr_ppo_idx???? shp_ppi_idx???????? shp_ppo_idx??????? sca_ppi_idx Read : cat /proc/videograph/vpe/pipe_mode 3 Spatial Noise Reduction \u00b6 This is spatial noise reduction module(abbreviation is \u201cSPNR\u201d). It will divide the image into high frequency part and middle frequency part, performing noise reduction process respectively, then combine together to achieve the purpose of noise reduction and retain detail.? 3.1 Overview \u00b6 Major processing flow is as follows : Figure 3?1 The SPNR processing flow. Major processing flow : Divide the input image into high frequency image and middle frequency image. Determine and label whether the processing pixel is on the edge. Perform edge smooth process on high frequency image and middle frequency image, respectively. Perform flat region noise reduction process on middle frequency image. Use high/middle frequency image which had performed noise reduction process to reconstruct image. 3.2 Parameter Description \u00b6 (The blue text is the part of the parameter difference between this module and the 9831x series, please pay special attention) Table 3?1 SPNR Parameter List Parameter Range Def Description t_y_edge_detection [2][8] 0~1023 161,322,483,447, 419,320,195,130, 108,215,308,272, 246,185,125,100 Y threshold for determining whether the current processing pixel is on the edge. It has eight thresholds mapping to pixel brightness from dark to bright, respectively. [0][0~7] is the threshold from dark to bright for high frequency image. [1][0~7] is the threshold from dark to bright for middle frequency image. t_cb_edge_detection 0~1023 0,249 Cb threshold for determining whether the current processing pixel is on the edge. Only works in middle frequency image. t_cr_edge_detection [2] 0~1023 0,249 Cr threshold for determining whether the current processing pixel is on the edge. Only works in middle frequency image. t_y_edge_smoothing[2][8] 0~255 66,132,161,149, 140,107,80,53, 44,88,103,91, 82,62,51,41 Y threshold for determining whether it will perform smooth process. It has eight thresholds mapping to pixel brightness from dark to bright, respectively. [0][0~7] is the threshold from dark to bright for high frequency image. [1][0~7] is the threshold from dark to bright for middle frequency image. t_cb_edge_smoothing [2] 0~255 0,153 Cb threshold for determining whether it will perform smooth process. Only works in middle frequency image. t_cr_edge_smoothing [2] 0~255 0,153 Cr threshold for determining whether it will perform smooth process. Only works in middle frequency image. nr_strength_y[2] 0~15 {0, 0} The denoise strength of spatial domain on Y channel. [0] is denoise strength for high frequency image. [1] is denoise strength for middle frequency image. nr_strength_c 0~15 {0, 10} The denoise strength of spatial domain on Cb/Cr channel. Only works in middle frequency image. Advance description : l edge_smoothing?: When SPNR performs smooth process, it will calculate weighting sum of neighbor pixels along the edge direction, if the difference between the neighbor pixel and center pixel is larger than threshold, this neighbor pixel will not be used in the smooth process. The smooth process of Y/Cb/Cr are the same. 3.3 Setting Interface \u00b6 3.3.1 Proc \u00b6 l /proc/videograph/vpe/mrnr/dump_info \u00b6 [Description] Read all SPNR(using MRNR method) parameters of the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/mrnr/dump_info Output: l /proc/videograph/vpe/mrnr/mrnr_en \u00b6 [Description] Read or write the MRNR enable status of the current camera channel. [Command] Write : proc command Target Parameter echo [mrnr_en (0~1)] > /proc/videograph/vpe/mrnr/mrnr_en mrnr_en Read : cat /proc/videograph/vpe/mrnr/mrnr_en Output: l /proc/videograph/vpe/mrnr/t_xx_edge_det \u00b6 [Description] Read or write edge_detection parameters. [Command] Write : proc command Target Parameter echo [t_y_edge_det[0][0] \u2026..[0][7]] > /proc/videograph/vpe/mrnr/ t_y_edge_det_1 t_y_edge_detection[0~7] echo [t_y_edge_det[1][0] \u2026..[1][7]] > /proc/videograph/vpe/mrnr/ t_y_edge_det_2 t_y_edge_detection[8~15] echo [t_cb_edge_det] > /proc/videograph/vpe/mrnr/ t_cb_edge_det t_cb_edge_detection[0~1] echo [t_cr_edge_det] > /proc/videograph/vpe/mrnr/ t_cr_edge_det t_cr_edge_detection[0~1] Read : cat /proc/videograph/vpe/mrnr/ t_y_edge_det_1 cat /proc/videograph/vpe/mrnr/ t_y_edge_det_2 cat /proc/videograph/vpe/mrnr/ t_cb_edge_det_1 cat /proc/videograph/vpe/mrnr/ t_cr_edge_det_1 Output : l /proc/videograph/vpe/mrnr/t_xx_edge_smooth \u00b6 [Description] Read or write edge_smoothing parameters. [Command] Write : proc command Target Parameter echo [t_y_edge_smooth[0][0]] \u2026\u2026..[t_y_edge_smooth [0][7]] > /proc/videograph/vpe/mrnr/ t_y_edge_smooth_1 t_y_edge_ smoothing[0~7] echo [t_y_edge_smooth[1][0] \u2026\u2026.. [t_y_edge_smooth[1] [7]] > /proc/videograph/vpe/mrnr/t_y_edge_smooth_2 t_y_edge_ smoothing[8~16] echo [t_cb_edge_smooth] > /proc/videograph/vpe/mrnr/ t_cb_edge_smooth t_cb_edge_smoothing[0~1] echo [t_cr_edge_smooth] > /proc/videograph/vpe/mrnr/ t_cr_edge_smooth t_cr_edge_ smoothing[0~1] Read : cat /proc/videograph/vpe/mrnr/t_y_edge_smooth_1 cat /proc/videograph/vpe/mrnr/t_y_edge_smooth_2 cat /proc/videograph/vpe/mrnr/t_cb_edge_smooth cat /proc/videograph/vpe/mrnr/t_cr_edge_smooth Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [t_y_edge_smooth[0]] \u2026\u2026.. [t_y_edge_smooth [7]] > /proc/videograph/vpe/mrnr/t_y_edge_smooth_1 \u2026 =============================================================== t_y_edge_smooth1 = t_y_edge_smoothing[0][0] \u2026\u2026\u2026\u2026\u2026. [0][7] t_y_edge_smooth1 = t_y_edge_smoothing [1][0]\u2026\u2026\u2026\u2026\u2026.. [0][7] t_cb_edge_smooth = t_cb_edge_smoothing t_cr_edge_smooth = t_cr_edge_smoothing ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image012.png)** l /proc/videograph/vpe/mrnr/nr_strength \u00b6 [Description] Read or write nr_strength parameters on Y/C channel. [Command] Write : proc command Target Parameter echo [strength_y[0]] [strength_y [1]] [strength_c] > /proc/videograph/vpe/mrnr/nr_strength nr_strength_y[0~1], nr_strength_c Read : cat /proc/videograph/vpe/mrnr/ nr_strength Output : 3.3.2 Vendor API \u00b6 [Description] Get and set the 2DNR parameters corresponding to current path_id. [Command] ??????? Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_DN_2D, VENDOR_VIDEO_PARAM_MRNR *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_DN_2D, VENDOR_VIDEO_PARAM_MRNR *p_param); [Definition] 4 Temporal Noise Reduction (TMNR) \u00b6 This is temporal noise reduction module(abbreviation is \u201cTMNR\u201d). The major function is to eliminate temporal noise in the image. 4.1 Overview \u00b6 The concept of TMNR algorithm is to determine whether the pixel status is static(MotionLevel=0) or motion(MotionLevel=2) by Motion Detect module. The static region perform 3DNR to reduce the temporal noise, and the motion region will not perform 3DNR to prevent from having ghost, instead, it will perform 2DNR to reduce noise. The transition region between static region and motion region will combine the result of 2DNR and 3DNR by weighting. 4.2 Parameter description \u00b6 (The blue text is the part of the parameter difference between this module and the 9831x series, please pay special attention) Table 4?1 TMNR Parameter List Parameter Range Default Description tmnr_en 0~1 1 TMNR ON/OFF luma_dn_en 0~1 1 Y channel TMNR ON/OFF chroma_dn_en 0~1 1 Cb/Cr channel TMNR ON/OFF tmnr_fcs_en 0~1 0 Temporal de-false color function ON/OFF It only works when \u201cchroma_dn_en\u201d is set to 1. Please refer to advance description. nr_str_y_3d 0~32 8 Y channel temporal NR strength nr_str_y_2d 0~32 16 Y channel spatial NR strength of motion object nr_str _c_3d 0~32 16 Cb/Cr channel temporal NR strength nr_str _c_2d 0~32 16 Cb/Cr channel spatial NR strength of motion object blur_str_y 0~2 1 Y image blurred strength 0: No blur 1: low-strength blur 2: high-strength blur \u203bIt is recommend to set enable, if the executing sequence of 3DNR is after Sharpness; otherwise, it is recommend to set disable. For DVR/NVR application, due to in most case the front-end camera had perfomed sharpen process, it is recommend to set 1. center_wzero_y_2d_en 0~1 1 Set to enable represents when performing the 2DNR, the weighting of center point is 0. It will increase NR strength, but might lose detail. Due to 2DNR only works on motion region, the detail loss is not obvious, it is recommend to fix enable. center_wzero_y_3d_en 0~1 1 Set to enable represents when performing 3DNR, the weighting of center point is 0. It is recommend to fix enable. small_vibrat_supp_y_en 0~1 0 Y channel small vibration suppresiioon ON/OFF. This function will enhance suppression on small vibration noise to make the image more stable. However, it also causes slower ghost removal. It is recommend to enable at normal luminance, and disable at dark luminance. avoid_residue_th_y 1~4 2 Upper threshold for Y channel small noise putting back. If err_compen sate = 0, bigger this value will cause smaller temporal noise. On the other hand, if err_compensate = 1, bigger this value will cause bigger temporal noise. avoid_residue_th_c 1~4 1 Upper threshold for Vb/Cr channel small noise putting back. If err_compensate = 0, bigger this value will cause smaller temporal noise. On the other hand, if err_compensate = 1, bigger this value will cause bigger temporal noise. display_motion_map_en 0~1 0 Debug mode. Show motion detection result on the image to assist to judge the correctness of motion detect parameters. Please refer to advance description. motion_map_channel 0~4 0 Select debug signal channel. 0: Y channel 1: Cb channel 2: Cr channel 3: temporal de-false color Cb channel 4: temporal de-false color Cr channel y_base[8] 0~16320 {146,147,107,110,102,104,104,104} y_base[0]-[7] are NoiseSAD mapping to pixel brightness from dark to bright. When performing 2DNR, the internal algorithm will automatically fine tune strength based on y_base. The larger the y_base, the stronger strength of 2DNR of motion object. It is recommend to increase y_base as sensor gain increases. motion_level_th_y_k1 0~32 8 Threshold (motion_level_th_y_k1*Y_NOISE) for determining transition region on Y channel. Y_NOISE please refer to advance description. motion_level_th_y_k2 0~32 8 Threshold (motion_level_th_y_k2*Y_NOISE) for determining motion region on Y channel. K2 must larger or equal to K1. y_coefa[8] 0~48 {0,0,0,0,0,0,0,0} The slope of NoiseSAD from flat region to detail region on Y channel. y_coefa[0]-[7] mapping to pixel brightness from dark to bright. y_coefb[8] 0~16320 {27,27,20,12,7,10,10,10} NoiseSAD of flat region on Y channel. y_coefb[0]-[7] mapping to pixel brightness from dark to bright. y_std[8] 0~16320 {20,70,70,70,70,50,28,18} The standard deviation of NoiseSAD on Y channel. y_std[0]-[7] mapping to pixel brightness from dark to bright. motion_level_th_c_k1 0~32 8 Threshold for determining transition region on Cb/Cr channel. motion_level_th_c_k2 0~32 8 Threshold for determining motion region on Cb/Cr channel, K2 must larger or equal to K1. cb_mean[8] 0~6375 {33,33,34,32,29,28,28,28} The NoiseSAD mean value on Cb channel. cb_mean[0]-[7] mapping to pixel brightness from dark to bright. cb_std[8] 0~6375 {10,9,10,10,9,9,9,9} The standard deviation of NoiseSAD on Cb channel. cb_std[0]-[7] mapping to pixel brightness from dark to bright. cr_mean[8] 0~6375 {23,23,25,23,20,20,21,21} The NoiseSAD mean value on Cr channel. cr_mean[0]-[7] mapping to pixel brightness from dark to bright. cr_std[8] 0~6375 {7,7,8,7,7,77,7} The standard deviation of NoiseSAD on Cr channel. cr_std[0]-[7] mapping to pixel brightness from dark to bright. lut_y_3d_1_Th[4] 0~127 {11,33,55,77} Lut of Y channel 3D_1 filter Please refer to advance description. lut_y _3d_2_Th[4] 0~127 {40,14,7,3} Lut of Y channel 3D_2 filter Please refer to advance description. lut_y_2d_Th[4] 0~127 {11,33,55,77} Lut of Y channel 2D filter Please refer to advance description. lut_c_3d_Th[4] 0~127 {37,19,11,7} Lut of Cb/Cr channel 3D filter Please refer to advance description. lut_c_2d_Th[4] 0~127 {11,33,55,77} Lut of Cb/Cr channel 2D filter Please refer to advance description. tmnr_fcs_str 0~15 4 The strength of temporal de-false color function. tmnr_fcs_th 0~255 32 Threshold for the difference between the previous frame and the current frame to determine whether it is false color. dithering_en 0~1 1 Dithering enable. This function can be used to eliminate slight power noise or flicker phenomenon. dithering_bit_y 0~3 2 Y channel random bit number. The higher the value, the stronger the ability to eliminate the power noiser and filcker phenomenon, but the picture may appear larger fine noise. dithering_bit_u 0~3 1 U channel random bit number. The higher the value, the stronger the ability to eliminate the power noiser and filcker phenomenon, but the picture may appear larger fine noise. dithering_bit_v 0~3 1 V channel random bit number. The higher the value, the stronger the ability to eliminate the power noiser and filcker phenomenon, but the picture may appear larger fine noise. err_compensate 0~1 1 YC Compression error compensation. 0: Antiflicker mode. (Larger anti-flicker effect) 1: Compensation mode. (Data Compression Error Compensation) Advance Description: l tmnr_fcs_en: Temporal de-false color ON/OFF. This function will eliminate color-flash phenomenon in high frequency region. FCS off FCS on l display_motion_map_en: \u3002 Motion region will label with red color, static region will label with black color, and transition region will label with white color. Original image Motion Map l Y_NOISE : Block SAD is the summation of pixel difference between the previous frame and current frame at the same location. If the Block SAD is larger than K2 NoiseSAD_STD(NoiseSAD_STD is the input parameter), it determines as motion region. If the Block SAD is smaller than K1 NoiseSAD_STD, it determines as static region. If the Block SAD is larger than K1*NoiseSAD_STD and smaller than K2*NoiseSAD_STD, it determines as transition region. As follows : l Cb_NOISE, Cr_NOISE: Different from Y channel, the NoiseSAD of Cb/Cr channel has no relationship with detail. Therefore, it has no slope parameter. l lut_Y_3d_1_Th: Weighting Lut for stage 1 3DNR on Y channel, the x-axis is delta difference of neighbor pixel, the y-axis is weighting. As the following figure, the larger the difference, the smaller the weighting. The smaller the difference, the larger the weighting. Then, based on each weighting to perform weighting sum. l lut_Y_3d_2_Th: Weighting Lut for Stage 2 3DNR on Y channel, the x-axis is difference of the reference point between the previous frame and current frame, the y-axis is weighting. As the following figure, those with smaller difference might be static region, and set smaller weighting, the output will close to the reference frame. On the contrast, those with larger difference might be motion region, and set larger weighting, the output will close to the current frame. l lut_Y_2d_Th: Weighting Lut of neighbor pixel for 2DNR on Y channel, the x-axis is difference, the y-axis is weighting. As the following figure, the larger the difference, the smaller the weighting. The smaller the difference, the larger the weighting. Then, based on each weighting to perform weighting sum. l lut_c_3d_Th: Suppression Level Lut for 3DNR on Cb/Cr channel, the x-axis is the difference of the reference point between the previous frame and current frame, the y-axis is the suppression level. The concept is the same with \u201c LUT_Y_3d_2_Th \u201d. l lut_c_2d_Th: Weighting Lut of neighbor pixel for 2DNR on Cb/Cr channel, the x-axis is difference, the y-axis is weighting. The concept is the same with \u201c lut_Y_2d_Th \u201d. 4.3 Setting Interface \u00b6 4.3.1 Proc \u00b6 l /proc/videograph/vpe/tmnr/dump_info \u00b6 [Description] Read all parameters of the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/tmnr/dump_info Output : l /proc/videograph/vpe/tmnr/ch_en_status \u00b6 [Description] Read or write the enable status of the current channel. [Command] Write : proc command Target Parameter echo [luma_en] [chroma_en] [fcs_en] > /proc/videograph/vpe/tmnr/ch_en_status luma_dn_en chroma_dn_en tmnr_fcs_en Read : cat /proc/videograph/vpe/tmnr/ch_en_status Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [luma_en] [chroma_en] [fcs_en] > /proc/videograph/vpe/tmnr/ch_en_status =============================================================== luma_en = luma_dn_en chroma_en = chroma_dn_en fcs_en = tmnr_fcs_en ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image027.png)** l /proc/videograph/vpe/tmnr/nr_strength \u00b6 [Description] Read or write the TMNR strength of the current channel. [Command] Write : proc command Target Parameter echo [y_3d_str] [y_2d_str] [c_3d_str] [c_2d_str] > /proc/videograph/vpe/tmnr/nr_strength nr_str_y_3d, nr_str_y_2d nr_str_c_3d, nr_str_c_2d Read : cat /proc/videograph/vpe/tmnr/nr_strength Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_3d_str] [y_2d_str] [c_3d_str] [c_2d_str] > /proc/videograph/vpe/tmnr//proc/videograph/vpe/tmnr/nr_strength =============================================================== nr_str_y_3d = nr_str_y_3d nr_str_y_2d = nr_str_y_2d nr_str_c_3d = nr_str_c_3d nr_str_c_2d = nr_str_c_2d ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image028.png)** l /proc/videograph/vpe/tmnr/y_base \u00b6 [Description] Read or write the base noise level of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_base0] [y_base1]\u2026\u2026\u2026[y_base7] > /proc/videograph/vpe/tmnr/y_base y_base[0]~[7] Read : cat /proc/videograph/vpe/tmnr/y_base Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_base0] [y_base1]\u2026\u2026\u2026[y_base7] > /proc/videograph/vpe/tmnr/y_base =============================================================== TMNR Noise Y_base = y_base[0]\u2026\u2026\u2026\u2026y_base[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image029.png)** l /proc/videograph/vpe/tmnr/motion_level_th \u00b6 [Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_k1] [y_k2] [c_k1] [c_k2] > /proc/videograph/vpe/tmnr/motion_level_th motion_level_th_y_k1 motion_level_th_y_k2 motion_level_th_c_k1 motion_level_th_c_k2 Read : cat /proc/videograph/vpe/tmnr/motion_level_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_k1] [y_k2] [c_k1] [c_k2] > /proc/videograph/vpe/tmnr/motion_level_th =============================================================== TMNR motion level th = motion_level_th_y_k1, motion_level_th_y_k2, motion_level_th_c_k1, motion_level_th_c_k2, ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image030.png)** l /proc/videograph/vpe/tmnr/y_coeffa \u00b6 [Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_coeffa0] [y_coeffa1]\u2026\u2026\u2026[y_coeffa7] > /proc/videograph/vpe/tmnr/y_coeffa y_coeffa[0]~[7] Read : cat /proc/videograph/vpe/tmnr/y_coeffa Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_coeffa0] [y_coeffa1]\u2026\u2026\u2026[y_coeffa7] > /proc/videograph/vpe/tmnr/y_coeffa =============================================================== TMNR Noise model y_coeffa = y_coeffa[0]\u2026\u2026\u2026\u2026y_coeffa[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image031.png)** l /proc/videograph/vpe/tmnr/y_coeffb \u00b6 [Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_coeffb0] [y_coeffb1]\u2026\u2026\u2026[y_coeffb7] > /proc/videograph/vpe/tmnr/y_coeffb y_coeffb[0]~[7] Read : cat /proc/videograph/vpe/tmnr/y_coeffb Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_coeffb0] [y_coeffb1]\u2026\u2026\u2026[y_coeffb7] > /proc/videograph/vpe/tmnr/y_coeffb =============================================================== TMNR Noise model y_coeffb = y_coeffb[0]\u2026\u2026\u2026\u2026y_coeffb[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image032.png)** l /proc/videograph/vpe/tmnr/y_std \u00b6 [Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_std0] [y_std1]\u2026\u2026\u2026[y_std7] > /proc/videograph/vpe/tmnr/y_std y_std[0]~[7] Read : cat /proc/videograph/vpe/tmnr/y_std Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_std0] [y_std1]\u2026\u2026\u2026[y_std7] > /proc/videograph/vpe/tmnr/y_std =============================================================== TMNR Noise model y_std = y_std[0]\u2026\u2026\u2026\u2026y_std[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image033.png)** l /proc/videograph/vpe/tmnr/cb_mean \u00b6 [Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [cb_mean0] [cb_mean1]\u2026\u2026\u2026[cb_mean 7] > /proc/videograph/vpe/tmnr/cb_mean cb_mean[0]~[7] Read : cat /proc/videograph/vpe/tmnr/cb_mean Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [cb_mean0] [cb_mean1]\u2026\u2026\u2026[cb_mean 7] > /proc/videograph/vpe/tmnr/cb_mean =============================================================== TMNR Noise model cb_mean = cb_mean[0]\u2026\u2026\u2026\u2026cb_mean[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image034.png)** l /proc/videograph/vpe/tmnr/cb_std \u00b6 [Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [cb_std0] [cb_std1]\u2026\u2026\u2026[cb_std7] > /proc/videograph/vpe/tmnr/cb_std cb_std[0]~[7] Read : cat /proc/videograph/vpe/tmnr/cb_std Output : l /proc/videograph/vpe/tmnr/cr_mean \u00b6 [Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [cr_mean0] [cr_mean1]\u2026\u2026\u2026[cr_std7] > /proc/videograph/vpe/tmnr/cr_mean cr_std[0]~[7] Read : cat /proc/videograph/vpe/tmnr/cr_mean Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [cr_mean0] [cr_mean1]\u2026\u2026\u2026[cr_std7] > /proc/videograph/vpe/tmnr/cr_mean =============================================================== TMNR Noise model cr_mean = cr_mean[0]\u2026\u2026\u2026\u2026cr_mean[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image036.png)** l /proc/videograph/vpe/tmnr/cr_std \u00b6 [Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [cr_std0] [cr_std1]\u2026\u2026\u2026[cr_std7] ] > /proc/videograph/vpe/tmnr/cr_std cr_std[0]~[7] Read : cat /proc/videograph/vpe/tmnr/cr_std Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [cr_std0] [cr_std1]\u2026\u2026\u2026[cr_std7] > /proc/videograph/vpe/tmnr/cr_std =============================================================== TMNR Noise model cr_std = cr_std[0]\u2026\u2026\u2026\u2026cr_std[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image037.png)** l /proc/videograph/vpe/tmnr/lut_y_3d_1_th \u00b6 [Description] Read or write the 3D noise reduction parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_y_3d_1_th lut_y_3d_1_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_y_3d_1_th Output : l /proc/videograph/vpe/tmnr/lut_y_3d_2_th \u00b6 [Description] Read or write the 3D noise reduction parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_y_3d_2_th lut_y_3d_2_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_y_3d_2_th Output : l /proc/videograph/vpe/tmnr/lut_y_2d_th \u00b6 [Description] Read or write the 2D noise reduction parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_y_2d_th lut_y_2d_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_y_2d_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_y_2d_th =============================================================== TMNR lut_y_2d_th = lut_y_2d_th[0]\u2026th[3] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image040.png)** l /proc/videograph/vpe/tmnr/lut_c_3d_th \u00b6 [Description] Read or write the 3D noise reduction parameters of 3DNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_c_3d_th lut_c_3d_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_c_3d_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_c_3d_th =============================================================== TMNR lut_c_3d_th = lut_c_3d_th[0]\u2026th[3] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image041.png)** l /proc/videograph/vpe/tmnr/lut_c_2d_th \u00b6 [Description] Read or write the 2D noise reduction parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_c_2d_th lut_c_2d_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_c_2d_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_c_2d_th =============================================================== TMNR lut_c_3d_th = lut_c_2d_th[0]\u2026th[3] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image042.png)** l /proc/videograph/vpe/tmnr/fcs_str \u00b6 [Description] Read or write the false color suppression strength of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [fcs_str (0~15) ] > /proc/videograph/vpe/tmnr/fcs_str tmnr_fcs_str Read : cat /proc/videograph/vpe/tmnr/fcs_str Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [fcs_str (0~15) ] > /proc/videograph/vpe/tmnr/fcs_str =============================================================== TMNR FCS strength = tmnr_fcs_str ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image043.png)** l /proc/videograph/vpe/tmnr/fcs_th \u00b6 [Description] Read or write the threshold for determining whether it is false color of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [fcs_th (0~255) ] > /proc/videograph/vpe/tmnr/fcs_th tmnr_fcs_th Read : cat /proc/videograph/vpe/tmnr/fcs_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [fcs_th (0~255) ] > /proc/videograph/vpe/tmnr/fcs_th =============================================================== TMNR FCS th = tmnr_fcs_th ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image044.png)** l /proc/videograph/vpe/tmnr/motion_map \u00b6 [Description] Read or write the motion map of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [map_en (0~1)] > [map_idx] > /proc/videograph/vpe/tmnr/motion_map map_en: 0: display_motion_map_en = 0 1: display_motion_map_en = 1 map_idx : ?0: motion_map_channel=Y ?1: motion_map_channel=Cb 2: motion_map_channel=Cr 3: motion_map_channel=FCS_Cb 4: motion_map_channel=FCS_Cr display_motion_map_en, motion_map_channel Read : cat /proc/videograph/vpe/tmnr/motion_map Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [map_en (0~1)] [map_idx (0~4)] > /proc/videograph/vpe/tmnr/motion_map =============================================================== TMNR motion_map : map_en = display_motion_map_en map_channel = motion_map_channel ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image045.png)** l /proc/videograph/vpe/tmnr/diff_blur_str \u00b6 [Description] Read or write the Diff. image blur strength of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [str (0~2)] > /proc/videograph/vpe/tmnr/diff_blur_str str: blur strength 0 ~2 blur_str_y Read : cat /proc/videograph/vpe/tmnr/diff_blur_str Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [str (0~2)] > /proc/videograph/vpe/tmnr/diff_blur_str =============================================================== diff_blur_str = blur_str_y ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image046.png)** l /proc/videograph/vpe/tmnr/avoid_residue_th \u00b6 [Description] Read or write the Diff. image blur strength of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [avoid_residue_th_y (1~4)] [avoid_residue_th_c (1~4)] > /proc/videograph/vpe/tmnr/avoid_residue_th avoid_residue_th_y, avoid_residue_th_c Read : cat /proc/videograph/vpe/tmnr/avoid_residue_th Output : l /proc/videograph/vpe/tmnr/dithering \u00b6 [Description] Read or write the dithering relative parameters of the current channel. [Command] Write : proc command Target Parameter echo [dithering_en (0~1)] [dithering_bit_y (0~7)] [dithering_bit_u (0~7)] [dithering_bit_v (0~7)] > /proc/videograph/vpe/tmnr/dithering dithering_en dithering_bit_y dithering_bit_u dithering_bit_v Read : cat /proc/videograph/vpe/tmnr/ dithering Output : l /proc/videograph/vpe/tmnr/err_compensate \u00b6 [Description] Read or write the err_compensate parameter of the current channel. [Command] Write : proc command Target Parameter echo [err_compensate (0~1)] > /proc/videograph/vpe/tmnr/err_compensate err_compensate Read : cat /proc/videograph/vpe/tmnr/err_compensate Output : 4.3.2 Vendor API \u00b6 [Description] Get and set the TMNR parameters corresponding to current path_id. [Command] ??????? Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_TMNR_CTRL, VENDOR_VIDEO_PARAM_TMNR_EXT *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_DN_2D, VENDOR_VIDEO_PARAM_TMNR_EXT *p_param); [Definition] 5 Sharpen (SHP) \u00b6 This is texture enhancement module. 5.1 Overview \u00b6 This algorithm adopts inverse gamma information and after gamma information to perform texture enhancement, respectively, to improve the enhancement strength not smooth problem of the bright/dark region. Besides, it adopts 3x3 and 5x5 filter to enhance thin edge and thick edge, repectively, to take care of the detail and contrast of image. Calculating \u201cEdge Weight\u201d to determine this is detail region or flat region(thinner edge) and automatically adjusting weighting of detail enhancement result and flat region enhancement result to take care of texture enhancement and avoid noise enhancement. The \u201cHalo clip\u201d is used to control the overshootong phenomenon caused by edge enhancement. The major flow please refer to the following figure: Parameter Description Table 5?1 SHP Parameter List Parameter Range Def Description sharpen_en 0~1 0 Edge enhance ON/OFF edge_weight_src_sel 0~1 0 Select the image source to calculate \u201cEdge Weight \u201d. 0: after gamma, 1: inverse gamma. Please refer to description. edge_weight_th 0~255 2 Threshold for calculating \u201cEdge Weight\u201d, those smaller than threshold will be considered as flat region, and the output all adopt flat region enhancement result. edge_weight_gain 0~255 175 Adjust the weighting of detail enhancement result and flat region(thin edge) enhancement result. Based on the setting of \u201cnoise_level+noise_curve\u201d to adjust EdgeWeight for different pixel brightness. The larger the Edge Weight, the larger weighting of detail enhancement result, repersenting the edge enhance is more stronger(more noise). In the contrast, the smaller the edge weight, the larger weighting of flat region enhancement result, representing the edge enhancement is less stronger. noise_level 0~255 25 Please refer to advance description. noise_curve[17] 0~255 {50, 50, 50, 48, 47, 44, 39, 38, 37, 36, 35, 35, 35, 35, 35, 35, 35} Please refer to advance description. blend_inv_gamma 0~128 64 The blending weight of inverse gamma edge enhancement result and after gamma edge enhancement result. This parameter is equal to adjust the ratio of edge enhancement between bright region and dark region, let the edge enhancement level of bright region and dark region is more even. The larger the value, the stronger strength of bright region enhancement, but the weaker strength of dark region enhancement. edge_sharp_str1 0~255 25 Adjust the strength of thin edge enhancement edge_sharp_str2 0~255 10 Adjust the strength of thick edge enhancement flat_sharp_str 0~255 0 Adjust the strength of flat region(thin detail) enhancement. coring_th 0~255 0 Threshold for determing whether to perform enhancement. For those edge value smaller than threshold, they will not perform edge enhancement to avoid enhancing noise. bright_halo_clip 0~128 32 Remove bright halo edge caused by edge enhancement. The smaller the \u201cbright_halo_clip\u201d, the less bright halo edge, but the sharpness might be decreased. dark_halo_clip 0~128 96 Remove dark halo edge caused by edge enhancement. The smaller the \u201cdark_halo_clip\u201d, the less dark halo edge, but the sharpness might be decreased. Advance description l noise_level, noise_curve[17]: noise_level = noise_level + NoiseofPixel, wherein the NoiseofPixel is the y-axis of noise_curve. The noise_curve may depend on the pixel brightness to set the noise size, respectively. Normally, human eyes are less sensitive to the noise in high bright region; thus, it can set small value to increase the edge enhancement strength to enhance detail. It is recommend to use the following default value. If user want to adjust the noise size at all Y range(0-255), it just needs to adjust noise_level. Noise ? Default value: edge_weight_src_sel =0 noise_curve[17] ={50,50,50,48,47,44,39,38,37,36,35,35,35,35,35,35,35} e More strengthen on detail in bright region to avoid enhancing noise. edge_weight_src_sel =1 noise_curve[17] = {0, 38, 46, 51, 54, 57, 59, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62} e More strengthen on detail in dark region to enhance thin detail, but the noise in dark region will be enhanced, either. 5.2 Setting Interface \u00b6 5.2.1 Proc \u00b6 l /proc/videograph/vpe/sharpen/dump_info \u00b6 [Description] Read all Sharpen parameters of the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/sharpen/dump_info l /proc/videograph/vpe/sharpen/sharp_en \u00b6 [Description] Read or write the enable status of the cuurent channel. [Command] Write : proc command Target Parameter echo [ sharp_en (0~1) ] > /proc/videograph/vpe/sharpen/sharp_en sharpen_en Read : cat /proc/videograph/vpe/sharpen/shp_en Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [ sharp_en (0~1) ] > /proc/videograph/vpe/sharpen/sharp_en =============================================================== sharpen_en = sharpen_en ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/sharpen/edge_weight_src_sel \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [src_sel (0 ~ 1) ] > /proc/videograph/vpe/sharpen/edge_weight_src_sel edge_weight_src_sel Read : cat /proc/videograph/vpe/sharpen/edge_weight_src_sel Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [src_sel (0 ~ 1)] > /proc/videograph/vpe/sharpen/edge_weight_src_sel =============================================================== edge_weight_src_sel = edge_weight_src_sel 0: after gamma 1: before gamma ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/sharpen/edge_weigt_gain \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [gain (0~255) ] > /proc/videograph/vpe/sharpen/edge_weight_gain edge_weight_gain Read : cat /proc/videograph/vpe/sharpen/edge_weight_gain Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [gain (0~255)] > /proc/videograph/vpe/sharpen/edge_weight_gain =============================================================== edge_weight_gain = edge_weight_gain ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/sharpen/edge_weight_th \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [th (0~255) ] > /proc/videograph/vpe/sharpen/edge_weight_th edge_weight_th Read : cat /proc/videograph/vpe/sharpen/edge_weight_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th (0~255)] > /proc/videograph/vpe/sharpen/edge_weight_th =============================================================== edge_weight_th = edge_weight_th ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/sharpen/blend_inv_gamma \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [th (0~128) ] > /proc/videograph/vpe/sharpen/blend_inv_gamma blend_inv_gamma Read : cat /proc/videograph/vpe/sharpen/blend_inv_gamma Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th (0~128) > /proc/videograph/vpe/sharpen/blend_inv_gamma =============================================================== blend_inv_gamma = blend_inv_gamma ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/sharpen/edge_sharp_str \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [str1 (0~255)] [str2 (0~255)] > /proc/videograph/vpe/sharpen/edge_sharp_str edge_sharp_str1 edge_sharp_str2 Read : cat /proc/videograph/vpe/sharpen/edge_sharp_str Output : l /proc/videograph/vpe/sharpen/flat_sharp_str \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [str (0~255)] > /proc/videograph/vpe/sharpen/flat_sharp_str flat_sharp_str Read : cat /proc/videograph/vpe/sharpen/flat_sharp_str Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [str (0~255)] > /proc/videograph/vpe/sharpen/flat_sharp_str =============================================================== flat_sharp_str = flat_sharp_str ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/sharpen/coring_th \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [coring_th (0~255)] > /proc/videograph/vpe/sharpen/coring_th coring_th Read : cat /proc/videograph/vpe/sharpen/coring_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [coring_th (0~255)] > /proc/videograph/vpe/sharpen/coring_th =============================================================== coring_th = coring_th ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/sharpen/halo_clip \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [bright_clip (0~128)] [dark_clip(0~128)] > /proc/videograph/vpe/sharpen/halo_clip bright_halo_clip drak_halo_clip Read : cat /proc/videograph/vpe/sharpen/halo_clip Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [bright_clip (0~128)] [dark_clip(0~128)] > /proc/videograph/vpe/sharpen/halo_clip =============================================================== Bright_halo_clip = bright_halo_clip Dark_halo_clip = dark_halo_clip ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/sharpen/noise_curve \u00b6 [Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [noise_curve[0] (0~255)]\u2026. [noise_curve [16] (0~255)] > /proc/videograph/vpe/sharpen/noise_curve noise_curve[17] Read : cat /proc/videograph/vpe/sharpen/noise_curve Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [noise_curve[0] (0~255)]\u2026. [noise_curve [16] (0~255)] > /proc/videograph/vpe/sharpen/noise_curve =============================================================== noise_curve = noise_curve[0] \u2026\u2026\u2026.noise_curve[16] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** 5.2.2 Vendor API \u00b6 [Description] Get and set the sharpen parameters corresponding to current path_id. [Command] ??????? Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_SHARP, VENDOR_VIDEO_PARAM_SHARP *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_SHARP, VENDOR_VIDEO_PARAM_SHARP *p_param); [ \u5b9a\u7fa9 ] 6 Edge Smoothing (ES) \u00b6 This module is edge smoothing. The main function is to eliminate aliasing in the picture to improve the smoothness of the picture. 6.1 Overview \u00b6 The characteristics of this algorithm are to effectively smooth the edges of the input image, correct the jaggedness in the edge area of the input image, and avoid the Sharpen module to enhance the degree of jaggedness in the image edge again. The algorithm divides the input image into edge area and detail area, calculates the direction of the edge on the edge area, and then performs LPF convolution adaptively along the edge direction to smooth the edge of the image. The Edge Mask can be adjusted to avoid high-frequency areas being blurred due to smoothing. Please refer to the following figure for the main process: 6.2 Parameter Description \u00b6 Table 6?1 ES Parameter List Parameter Range Def Description edge_smooth_en 0~1 0 Edge smooth enable edge_smooth_y_edeng_th_lo 0~255 10 Adjust the strength threshold of detail areas in the picture Please refer to the advanced instructions edge_smooth_y_edeng_th_hi 0~255 70 Adjust the strength threshold of the edge area in the picture Please refer to the advanced instructions edge_smooth_y_ew_lo 0~255 2 Adjust the smoothing strength weight of detail areas in the picture Please refer to the advanced instructions edge_smooth_y_ew_hi 0~255 32 Adjust the suppression threshold for the smoothing of high-frequency areas in the picture. The larger the value, the easier it is to determine and smooth the high-frequency area. Therefore, the larger the value, the smoother the high-frequency area, and the smaller the value, the clearer the high-frequency area edge_smooth_y_edi_th 0~63 31 Suppresses the strength of smoothing in the high-frequency region. The larger the value, the stronger the smoothing in the high-frequency region. edge_smooth_y_ds_str 0~7 5 Adjust the strength of the smoothing filter in the picture. The larger the value, the stronger the smoothing degree. Advance description: l edge_smooth_y_edeng_th_lo , edge_smooth_y_edeng_th_hi, edge_smooth_y_ew_lo, edge_smooth_y_ew_hi : The strength of edge smooth is controlled by the edge energy intensity of the input image, where edge_smooth_y_edeng_th_hi and edge_smooth_y_edeng_th_lo are the ranges that set the edge area and the detail area, and edge_smooth_y_ew_hi and edge_smooth_y_ew_lo set the smoothness strength of the edge area and detail area. The larger the number, the stronger of the smoothness. The relationship between the edge area and the detail area is a continuous linear change, and the corresponding relationship is shown in the following figure: 6.3 Setting Interface \u00b6 6.3.1 Proc \u00b6 l /proc/videograph/vpe/es/param \u00b6 [Description] Read all edge smoothing parameters of the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/es/param l /proc/videograph/vpe/es/edge_smooth_en \u00b6 [Description] Set the edge smooth switch of the current camera channel. [Command] Write : proc command Target Parameter echo [edge_smooth_en (0~1)] > /proc/videograph/vpe/es/edge_smooth_en edge_smooth_en l /proc/videograph/vpe/es/edge_smooth_out_sel \u00b6 [Description] Set the edge smooth debugging switch of the current camera channel. [Command] Write : proc command Target Parameter echo [edge_smooth_out_sel (0~1)] > /proc/videograph/vpe/es/edge_smooth_out_sel edge_smooth_out_sel Read : cat /proc/videograph/vpe/es/edge_smooth_out_sel Output : l /proc/videograph/vpe/es/edge_smooth_th \u00b6 [Description] Set the edge smooth related threshold of the current camera channel. [Command] Write : proc command Target Parameter echo [y_edeng_th_lo (0~255)] [y_edeng_th_hi (0~255)] [y_ew_lo (0~255)] [y_ew_hi (0~255)] > /proc/videograph/vpe/es/edge_smooth_th edge_smooth_y_edeng_th_l edge_smooth_y_edeng_th_hi edge_smooth_y_ew_lo edge_smooth_y_ew_hi Read : cat /proc/videograph/vpe/es/edge_smooth_th Output : l /proc/videograph/vpe/es/edge_smooth_y_edi_th \u00b6 [Description] Set the edge smooth mask related parameters of the current camera channel. [Command] Write : proc command Target Parameter echo [edge_smooth_y_edi_th (0~63)] > /proc/videograph/vpe/es/edge_smooth_y_edi_th edge_smooth_y_edi_th Read : cat /proc/videograph/vpe/es/edge_smooth_y_edi_th Output : l /proc/videograph/vpe/es/edge_smooth_y_ds_str \u00b6 [Description] Sets the filter strength of the edge smooth of the current camera channel. [Command] Write : proc command Target Parameter echo [edge_smooth_y_ds_str (0~7)] > /proc/videograph/vpe/es/edge_smooth_y_ds_str edge_smooth_y_ds_str Read : cat /proc/videograph/vpe/es/edge_smooth_y_ds_str Output : 6.3.2 Vendor API \u00b6 [Description] Get and set the edge smooth parameters corresponding to current path_id. [Command] Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_EDGE_SMOOTH, VENDOR_VIDEO_PARAM_SHARP *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_EDGE_SMOOTH, VENDOR_VIDEO_PARAM_SHARP *p_param); [Definition] 7 Scaling (SCA) \u00b6 Inupt/Output low pass filter process with different resolution. The recommend maximum scaling down ratio is 8, and the recommend maximum scaling up ratio is 8. 7.1 Overview \u00b6 This is image scaling module, the major concept is interpolation and smooth process. 7.2 Parameter Description \u00b6 Table 7?1 SCA Parameter List Parameter Range Def Description sca_y_luma_algo_en 0~3 0 Algorithm select for vertical luma scaler. 0: judge by HW algorithm 1: select the nearest point on the left side 2: select the left side point and perform low pass filter process 3: the same as option 0 It is recommend to set 0. sca_x_luma_algo_en 0~3 0 Algorithm select for horizontal luma scaler. 0: judge by HW algorithm 1: select the nearest point on the left side 2: select the left side point and perform low pass filter process 3: the same as option 0 It is recommend to set 0. sca_y_chroma_algo_en 0~3 0 Algorithm select for vertical chroma scaler. 0: judge by HW algorithm 1: select the nearest point on the left side 2: bilinear interpolation 3: average It is recommend to set 0. sca_x_chroma_algo_en 0~3 0 Algorithm select for horizontal chroma scaler. 0: judge by HW algorithm 1: select the nearest point on the left side 2: bilinear interpolation 3: average It is recommend to set 0. sca_map_sel 0~1 0 Select scaler source mapping format. 0: without 0.5 pixel distance shift(start from the 0th pixel of image image) 1: with 0.5 pixel distance shift(start from the 0.5th pixel of image image) If set to 1, when the size of input image and output image is the same or the size is multiple of 2, the scaling performance of output image will similar to perform low pass filter. It is recommend to set 0. sca_ceffH_0~3 -128~127 [0, 0, 0, 64] LPF coefficient in horizontal direction. Please refer to advance description. \u203bThe software limit range is between -128~127, to reduce memory usage. sca_ceffv_0~3 -128~127 [0, 0, 0, 64] LPF coefficient in vertical direction. Please refer to advance description. \u203bThe software limit range is between -128~127, to reduce memory usage. des_drt 0, 2,3 0 YUV domain transform 0: bypass 2: PC level to TV level (Y: 16~235 / C:16~240) 3: TV level to PC level? (Y: 0~235 C:0~255) 255: decide by job parameter of AP rather than driver (default value is 255, other settings are used for debug) Advance description: l sca_ceffH_0~3, sca_ceffV_0~3: LPF coefficients in horizontal direction and vertical direction. User can adjust LPF coefficients to fine tune sawtooth phenomenon in oblique line caused by scaling. ?Table 7?2 Scaler Low pass filter default parameter list Scaling Ratio (R) HCoef0 HCoef1 HCoef2 HCoef3 VCoef0 VCoef1 VCoef2 VCoef3 \u2267 1x 0 0 0 64 0 0 0 64 1 < R \u2266 1.25x 0 0 3 58 0 0 3 58 1.25 < R \u2266 1.5x 0 0 7 50 0 0 7 50 1.5 < R \u2266 1.75x 0 0 11 42 0 0 11 42 1.75 < R \u2266 2x 0 1 13 36 0 1 13 36 2 < R \u2266 2.25x 0 1 15 32 0 1 15 32 2.25 < R \u2266 2.5x 0 2 15 30 0 2 15 30 2.5 < R \u2266 2.75x 0 3 15 28 0 3 15 28 2.75 < R \u2266 3x 0 4 15 26 0 4 15 26 3 < R \u2266 3.25x 1 4 15 24 1 4 15 24 3.25 < R \u2266 3.5x 1 5 15 22 1 5 15 22 3.5 < R \u2266 3.75x 2 7 14 18 2 7 14 18 3.75 < R \u2266 4x 3 8 13 16 3 8 13 16 4 < R \u2266 5x 4 8 13 14 4 8 13 14 5 < R \u2266 6x 4 9 12 14 4 9 12 14 6x < R \u2266 7x 6 9 11 12 6 9 11 12 7x < R 6 9 11 12 6 9 11 12 7.3 Setting Interface \u00b6 7.3.1 Proc \u00b6 l /proc/videograph/vpe/sca/param \u00b6 [Description] Read all SCA parameters of the cuurent scaling ratio [Command] Write : Not support. Read : cat /proc/videograph/vpe/sca/param **![\u6587\u5b57\u65b9\u584a: fd(0x00000000) sca_y_luma_algo_en = 0 sca_x_luma_algo_en = 0 sca_y_chroma_algo_en = 0 sca_x_chroma_algo_en = 0 sca_map_sel = 0 sca_1x_param = { 0, 0, 0, 64, 0, 0, 0, 64 } sca_1.25x_param = { 0, 0, 0, 64, 0, 0, 0, 64 } \u2026 ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image057.png)** l /proc/videograph/vpe/sca/ctrl_param \u00b6 [Description] Set SCA controlling parameter for specific ratio. [Command] Write : proc command Target Parameter echo [sca_luma_algo (0~3)] [sca_chroma_algo (0~3)] [sca_map_sel (0~1)] > /proc/videograph/vpe/sca/ctrl_param index: Target ratio The command \u201csca_luma_algo\u201d set parameters \u201csca_y_luma_algo_en\u201d and \u201csca_x_luma_algo_en\u201d at the same time. The command \u201csca_chroma_algo\u201d set parameters \u201csca_y_chroma_algo_en\u201d and \u201csca_x_chroma_algo_en\u201d at the same time. The command \u201csca_map_sel\u201d set \u201csca_map_sel\u201d parameter. Read : Not support l /proc/videograph/vpe/sca/lpf_param \u00b6 [Description] Set SCA low pass filter parameter for specific ratio. [Command] Write : proc command Target Parameter echo [index (0~16)] [coeffH[0]] [coeffH[1]] [coeffH[2]] ]coeffH[3]] [coeffV[0]] [coeffV[1]] [coeffV[2]] [coeffV[3]] (-128 ~ 127) >? /proc/videograph/vpe/sca/lpf_param index: Target ratio coeffH : sca_ceffH[4] coeffV: sca_ceffV[4] \u203bThe software limit range is between -128~127, to reduce memory usage. Read : Not support l /proc/videograph/vpe/sca/yuv_range \u00b6 [Description] Read or write YUV range of SCA at each one of the channel. \u203b Parameter can be set by put job of AP depends on channel requests, it is not recommend to be set by this proc command or ioctl to avoid conflicts. This command is used for debugging. [Command] Write : proc command Target Parameter echo [fd range] > /proc/videograph/vpe/sca /yuv_range yuv_range: 0, 2, 3, 255 (disable) \u203bdisable represent AP directly control parameters des_drt Read : cat /proc/videograph/vpe/sca/yuv_range Output : **![\u6587\u5b57\u65b9\u584a: Command : echo < fd range >(0:bypass, 2:TV, 3:PC, 255:diable) =============================================================== fd(0x40000000) yuv range = 0 fd(0x40000001) yuv range = 0 fd(0x40000002) yuv range = 0 fd(0x40000003) yuv range = 0 ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** 7.3.2 Vendor API \u00b6 [Description] Get and set the scaling parameters corresponding to current path_id. [Command] ??????? Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_SCA, VENDOR_VIDEO_PARAM_SCA_SET *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_SCA, VENDOR_VIDEO_PARAM_SCA_SET *p_param); [Definition] **![\u6587\u5b57\u65b9\u584a: typedef struct _VENDOR_VIDEO_PARMA_SCA_CTRL { INT32 sca_ceffH[4]; ///< LPF coefficient in horizontal direction INT32 sca_ceffV[4]; ///< LPF coefficient in vertical direction } VENDOR_VIDEO_PARMA_SCA_CTRL; typedef struct _VENDOR_VIDEO_PARAM_SCA_SET { UINT8 sca_y_luma_algo_en; ///< Algorithm select for vertical luma scaler UINT8 sca_x_luma_algo_en; ///< Algorithm select for horizontal luma scaler UINT8 sca_y_chroma_algo_en; ///< Algorithm select for vertical chroma scaler UINT8 sca_x_chroma_algo_en; ///< Algorithm select for horizontal chroma scaler UINT8 sca_map_sel; ///< Scaler source mapping format select VENDOR_VIDEO_PARMA_SCA_CTRL sca_1000x_param; ///< scaling parameter for scaling ratio 1.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_1250x_param; ///< scaling parameter for scaling ratio 1.25x VENDOR_VIDEO_PARMA_SCA_CTRL sca_1500x_param; ///< scaling parameter for scaling ratio 1.50x VENDOR_VIDEO_PARMA_SCA_CTRL sca_1750x_param; ///< scaling parameter for scaling ratio 1.75x VENDOR_VIDEO_PARMA_SCA_CTRL sca_2000x_param; ///< scaling parameter for scaling ratio 2.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_2250x_param; ///< scaling parameter for scaling ratio 2.25x VENDOR_VIDEO_PARMA_SCA_CTRL sca_2500x_param; ///< scaling parameter for scaling ratio 2.50x VENDOR_VIDEO_PARMA_SCA_CTRL sca_2750x_param; ///< scaling parameter for scaling ratio 2.75x VENDOR_VIDEO_PARMA_SCA_CTRL sca_3000x_param; ///< scaling parameter for scaling ratio 3.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_3250x_param; ///< scaling parameter for scaling ratio 3.25x VENDOR_VIDEO_PARMA_SCA_CTRL sca_3500x_param; ///< scaling parameter for scaling ratio 3.50x VENDOR_VIDEO_PARMA_SCA_CTRL sca_3750x_param; ///< scaling parameter for scaling ratio 3.75x VENDOR_VIDEO_PARMA_SCA_CTRL sca_4000x_param; ///< scaling parameter for scaling ratio 4.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_5000x_param; ///< scaling parameter for scaling ratio 5.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_6000x_param; ///< scaling parameter for scaling ratio 6.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_7000x_param; ///< scaling parameter for scaling ratio 7.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_8000x_param; ///< scaling parameter for scaling ratio 8.00x } VENDOR_VIDEO_PARAM_SCA_SET; ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image058.png)** 8 Distortion Correction Engine (DCE) \u00b6 8.1 Overview \u00b6 This is lens distortion calibration module, it can perform calibration on wide-angle lens and fish-eye lens. 8.2 DCE Parameter Description \u00b6 Table 8?1 DCE Parameter List Parameter Range Def Description dce_mode 0~1 0 Select distortion function 0: GDC lens calibration 1: 2DLUT self-define XY coordinate distortion lut2d_sz 0~5 0 Size selection of 2D look-up table. The larger the size, the more precision to describe distortion. 0: 9x9 3: 65x65 4: 129x129 5: 257x257 lsb_rand 0~1 0 LSB 2 bit random generation for internal 10 bit->8 bit image. 0: fixed fill 0 1: random generate 0~3 fovbound 0~1 0 FOV boundary process method selection. When the distortion result can not fill the total output image, select different way to proceed the exceed range. 0: Replace out of boundary pixels with duplicate nearest pixel 1: Replace out of boundary pixels with bound pixels boundy 0~1023 0 Bound value for Y component(u8.2) boundu 0~1023 0 Bound value for U component(u8.2) boundv 0~1023 0 Bound value for V component(u8.2) cent_x_s 213-1 0 Define lens center of x-axis. It is recommend to set width/2. cent_y_s 213-1 0 Define lens center of y-axis. It is recommend to set height/2. xdist 0~4095 0 X input distance factor, for oval shape modeling. It is recommend to set 4095, which is suitable for most situation. ydist 0~4095 0 Y input distance factor, for oval shape modeling. It is recommend to set 4095, which is suitable for most situation. geo_lut 0~65535 0 The GEO deformation gain table, a total of 65 points, indicates the magnification of each pixel in the image at a different distance from the deformation center (magnification = 65535 * input radius / output radius), the gainbase is 65535, please refer to Note 2 for the gain table example. Value range\uff1a[0, 65535]\u3002 normfact 0~255 128 Radius normalization factor. Normfact = 1 << (normbit + 7) / R2 normbit 0~31 31 Radius normalization shift bit. R2 = (width/2)2+(height/2)2 The total bit number of R2 is normbit. Example: 9602+5402 = 1213200 (21 bits) fovgain 0~4095 0 Adjust the scaling ratio of the final distortion coordinate to preserve FOV. Scale down factor for FOV preservation. Due to it will effect the calibration performance, it is recommend to set 1024. hfact 0 ~ 224 -1 0 Horizontal scaling factor for 2DLut scaling up(u0.24). ((2DLUT horizontal pixel number \u2013 1) << 24) / (width \u2013 1) vfact 0 ~ 224 -1 0 Vertical scaling factor for 2DLut scaling up(u0.24). ((2DLUT vertical pixel number \u2013 1) << 24) / (height \u2013 1) xofs_i 0~127 0 2DLut x offset, integer part. It is recommend to set 0, if user need to adjust the DCE performance, user need to change the 2DLUT value. xofs_f 0~224-1 0 2DLut x offset, fraction part. It is recommend to set 0, if user need to adjust the DCE performance, user need to change the 2DLUT value. yofs_i 0~127 0 2DLut y offset, integer part. It is recommend to set 0, if user need to adjust the DCE performance, user need to change the 2DLUT value. yofs_f 0~224-1 0 2DLut y offset, fraction part. It is recommend to set 0, if user need to adjust the DCE performance, user need to change the 2DLUT value. [Note 1] Adjust geo_fov_gain, the left side is 1024, the right side is 1320, you can observe the increase in the field of view on the right side. ? [Note 2] The example of the GEO deformation gain table, from left to right, corresponds to the deformation amount from the center of the image to the edge. This parameter group indicates that the larger the deformation amount toward the edge is. This example is a barrel deformation correction. R is the distance from the center of the image to each point. This distance can be understood as the radius of the circle. Ri represents the radius of each point of the input (before correction) image. Ro represents the radius of each point of the output (corrected) image. RoMax represents the longest distance from the center of the output image to the four corners. If the center of the image falls at 1/2 of the width and height, the four corners are all equal, and they are the longest distances. 8.3 Setting Interface \u00b6 8.3.1 Proc \u00b6 l /proc/videograph/vpe/dce/dump_info \u00b6 [Description] Read all DCE parameters at the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/dce/dump_info **![\u6587\u5b57\u65b9\u584a: dce_en = 0 dce_mode = 1 lut2d_sz = 3 lut2d_vaddr = 0x0000000000000000 lut2d_paddr = 0x0 lsb_rand = 0 fovbound = 1 boundy = 512 boundu = 512 boundv = 512 cent_x_s = 720 cent_y_s = 720 xdist = 4095 ydist = 4095 normfact = 0 normbit = 0 fovgain = 1024 hfact = 745654 vfact = 745654 xofs_i = 0 xofs_f = 0 yofs_i = 0 yofs_f = 0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)** l /proc/videograph/vpe/dce/ch_en \u00b6 [Description] Read or write the enable status of the current channel. [Command] Write : proc command Target Parameter echo [ dc_en 0~1 ] > /proc/videograph/vpe/dce/ch_en dc_en Read : cat /proc/videograph/vpe/dce/ch_en Output : 8.3.2 Vendor API \u00b6 [Description] Get and set the dce parameters corresponding to current path_id. [Command] ??????? Get\uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEOPROC_DEWARP_INFO, VENDOR_DEWARP_INFO *p_param); ??????? Set\uff1a HD_RESULT c(HD_PATH_ID path_id, VENDOR_ VENDOR_VIDEOPROC_DEWARP_INFO, VENDOR_DEWARP_INFO *p_param); [Define] **![\u6587\u5b57\u65b9\u584a: typedef struct _VENDOR_DEWARP_CTRL { BOOL dc_enable; BOOL dctg_enable; } VENDOR_DEWARP_CTRL; typedef enum _VENDOR_DEWARP_MODE { VENDOR_DEWARP_DEWARP_MODE_GDC = 0, VENDOR_DEWARP_DEWARP_MODE_2DLUT = 1, ENUM_DUMMY4WORD(VENDOR_DEWARP_DEWARP_MODE) } VENDOR_DEWARP_MODE; typedef struct _VENDOR_DEWARP_DGC_PARM { INT32 cent_x_s; ///< Lens center of x axis (signed) INT32 cent_y_s; ///< Lens center of y axis (signed) UINT32 lens_r; ///< Radius of Lens UINT32 xdist; ///< X input distance factor, for oval shape modeling UINT32 ydist; ///< Y input distance factor, for oval shape modeling UINT8 normfact; ///< Radius normalization factor (u1.7) UINT8 normbit; ///< Radius normalization shift bit UINT16 geo_lut[VENDOR_GEO_LUT_X]; ///< GDC look-up table } VENDOR_DEWARP_DGC_PARM; typedef struct _VENDOR_DEWARP_2DLUT_PARM { UINT8 lut2d_sz; ///< Size selection of 2D look-up table, 0:9x9, 3:65x65 UINT32 hfact; ///< Horizontal scaling factor for 2DLut scaling up (u0.24) UINT32 vfact; ///< Vertical scaling factor for 2DLut scaling up (u0.24) UINT8 xofs_i; ///< 2DLUT x offset, integer part UINT32 xofs_f; ///< 2DLUT x offset, fraction part UINT8 yofs_i; ///< 2DLUT y offset, integer part UINT32 yofs_f; ///< 2DLUT xy offset, fraction part } VENDOR_DEWARP_2DLUT_PARM; typedef struct _VENDOR_DEWARP_FOV_PARM { UINT8 fovbound; ///< FOV boundary process method selection UINT16 boundy; ///< Bound value for Y component (u8.2) UINT16 boundu; ///< Bound value for U component (u8.2) UINT16 boundv; ///< Bound value for V component (u8.2) UINT16 fovgain; ///< Scale down factor for FOV preservation (u2.10) } VENDOR_DEWARP_FOV_PARM; ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image064.png)** **![\u6587\u5b57\u65b9\u584a: typedef struct _VENDOR_DEWARP_INFO { VENDOR_DEWARP_MODE mode; VENDOR_DEWARP_DGC_PARM dgc; VENDOR_DEWARP_2DLUT_PARM lut2d; VENDOR_DEWARP_FOV_PARM fov; } VENDOR_DEWARP_INFO; typedef struct _VENDOR_DEWARP_2DLUT_TABLE { UINT32 tbl[VENDOR_GEO_LUT]; } VENDOR_DEWARP_2DLUT_TABLE; ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image058.png)** 9 DC Table Generator(DCTG) \u00b6 9.1 Overview \u00b6 For perspective projection application, in order to increase the convenience of usage, DCTG module let user to set the desired angle and size with an instinct way to generate DCTG parameters automatically. Whenever this function is enabled, manual set DCE 2D-LUT function will be invalid. [Note] ??When using DCTG function, user needs to set two parameters enable, one is dc_enable, the other is dctg_en. Please refer to the following description: The \u201ctheta\u201d is the top/bottom angle. The \u201cphi\u201d is the rotate angle. The \u201crot_y\u201d is the rotate offset of (x, z) plane towards Y-axis. The \u201crot_z\u201d is the rotate offset of (x, y) plane towards Z-axis. Generate LUT: Define the rotate angle of FOV by phi_st/phi_ed, and then rotate to FOV location by rot_y. Define the top/bottom angle of FOV by theta_st/theta_ed, and then rotate to FOV location by rot_z. 9.2 Parameter Description \u00b6 Table 9?1 DCTG parameter list Parameter Range Def Description dctg_en 0-1 0 DCTG ON/OFF mount_type 0~1 0 Camera mount type. 0: Ceiling mount 1: Floor mount lut2d_sz 0, 3 3 Select size of 2D look-up table, this parameter must the same with DCE parameter. 0: 9x9 3: 65x65 lens_r 0~215-1 0 Valid radius of fish-eye lens, the unit is pixel. Please refer to advance description. lens_x_st 0~214-1 0 The start x position of fish-eye lens at the source image, the unit is pixel. lens_y_st 0~214-1 0 The start y position of fish-eye lens at the source image, the unit is pixel. theta_st -180 ~ 180 (-*pi ~ *pi) 0 FOV theta start radian. theta_ed -180 ~ 180 (-*pi ~ *pi) 0 FOV theta end radian. theta_end > theta_st: normal image theta_end < theta_st: flip image phi_st -360 ~ 360 (-2*pi ~ 2*pi) 0 OV phi start radian. phi_ed -360 ~ 360 (-2*pi ~ 2*pi) 0 FOV phi end radian. (-2*pi ~ 2*pi) phi_end > theta_st: normal image phi_end < theta_st: flip image rot_z -360 ~ 360 (-2*pi ~ 2*pi) 0 Z-axis rotate radian rot_y -360 ~ 360 (-2*pi ~ 2*pi) 0 Y-zxis rotate radian. Advance description: l lens_r: The valid radius of fish-eye device. l lens_x_st : The start x position of fish-eye lens at the source image, the unit is pixel. l lens_y_st : The start y position of fish-eye lens at the source image, the unit is pixel. 9.3 Setting Interface \u00b6 9.3.1 Proc \u00b6 l /proc/videograph/vpe/dctg/dump_info \u00b6 [Description] Read all dctg parameters of the current channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/dctg/dump_info l /proc/videograph/vpe/dctg/ch_en \u00b6 [Description] ??????? Set dctg enable. [Command] Write : proc command Target Parameter echo [dctg_en] > /proc/videograph/vpe/dctg/ch_en dctg_en: dctg enable Read : cat /proc/videograph/vpe/dctg/ch_en Output : l /proc/videograph/vpe/dctg/phi \u00b6 [Description] Set FOV phi start radian [Command] Write : proc command Target Parameter echo [st] [ed] > /proc/videograph/vpe/dctg/phi st: FOV phi start radian ed : FOV phi end radian \u203bangle range: -360 ~ 360 Read : cat /proc/videograph/vpe/dctg/phi Output : l /proc/videograph/vpe/dctg/rot \u00b6 [Description] Set Z-axis and Y-zxis rotate radian. [Command] Write : proc command Target Parameter echo [z] [y] > /prc/videograph/vpe/dctg/rot z: Z-axis rotate radian. y: Y-zxis rotate radian \u203bangle range: -360 ~ 360 Read : cat /proc/videograph/vpe/dctg/rot Output : l /proc/videograph/vpe/dctg/theta \u00b6 [Description] Set FOV theta start radian. [Command] Write : proc command \u76ee\u6a19\u53c3\u6578 echo [st] [ed] > /prc/videograph/vpe/dctg/theta st: FOV theta start radian. ed : FOV theta end radian \u203bangle range: -180 ~ 180 Read : cat /proc/videograph/vpe/dctg/theta Output : 9.3.2 Vendor API \u00b6 [Description] Get and set the dctg parameters corresponding to current path_id. [Command] ??????? Get\uff1a HD_RESULT vendor_videoproc_get(HD_PATH_ID path_id, VENDOR_VIDEOPROC_DEWARP_DCTG_INFO, VENDOR_DEWARP_DCTG_INFO *p_param); ??????? Set\uff1a HD_RESULT vendor_videoproc_set(HD_PATH_ID path_id, VENDOR_VIDEOPROC_DEWARP_DCTG_INFO, VENDOR_DEWARP_DCTG_INFO *p_param); [Define] **![\u6587\u5b57\u65b9\u584a: typedef struct _VENDOR_DEWARP_CTRL { BOOL dc_enable; BOOL dctg_enable; } VENDOR_DEWARP_CTRL; typedef struct _VENDOR_DEWARP_DCTG_INFO { VENDOR_DEWARP_DCTG_MODE mode; VENDOR_DEWARP_DCTG_LENS_PARM lens; VENDOR_DEWARP_DCTG_FOV_PARM fov; } VENDOR_DEWARP_DCTG_INFO; typedef enum _VENDOR_DEWARP_DCTG_MODE { VENDOR_DEWARP_DCTG_MODE_90 = 0, VENDOR_DEWARP_DCTG_MODE_360 = 1, ENUM_DUMMY4WORD(VENDOR_DEWARP_DCTG_MODE) } VENDOR_DEWARP_DCTG_MODE; typedef struct _VENDOR_DEWARP_DCTG_LENS_PARM { UINT8 mount_type; ///< Camera mount type. 0:Ceiling mount, 1:Floor mount UINT8 lut2d_sz; ///< Size selection of 2D look-up table, 0:9x9, 3:65x65, should the same with DCE setting. UINT32 lens_r; ///< Radius of Lens UINT32 lens_x_st; ///< Lens start x position at a source image UINT32 lens_y_st; ///< Lens start y position at a source image } VENDOR_DEWARP_DCTG_LENS_PARM; typedef struct _VENDOR_DEWARP_DCTG_FOV_PARM { INT32 theta_st; ///< FOV theta start radian (s4.16) Range: - pi ~ pi INT32 theta_ed; ///< FOV theta end radian (s4.16) Range: - pi ~ pi INT32 phi_st; ///< FOV phi start radian (s4.16) Range: -2 pi ~ 2 pi INT32 phi_ed; ///< FOV phi end radian (s4.16) Range: -2 pi ~ 2 pi INT32 rot_z; ///< Z-axis rotate radian (s4.16) Range: -2 pi ~ 2 pi INT32 rot_y; ///< Y-axis rotate radian (s4.16) Range: -2 pi ~ 2 pi } VENDOR_DEWARP_DCTG_FOV_PARM; ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image070.png)** 10 Revise History \u00b6 Version Date Advisor Description 0.1.00 2021/01/20 Allen Hsu First version. 0.2.00 2021/3/26 Allen Hsu Add description of Vendor command. 0.3.00 2022/4/11 Mina Wang Add description for dce and dctg","title":"VPE IQ Tuning Guide"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#1-overview","text":"Figure 1?1 NT9833x Video Flow VPE is an independent image processing engine in YUV domain, and it performs some pre-processing process before LCD display or encoder to improve the image quality. The related modules are as follows: l Spatial Noise Reduction Module(SPNR, using MRNR method) l Tempoarl Noise Reduction Module(TMNR) l Sharpen Module(SHP) l Scaling Module(SCA) \u203b The 9833x series has removed DCE and DCTG. \u203b In the following description, the area shown in blue is the same module as the 9831x series but the parameters are different. Please pay special attention) Figure 1?2 VPE Image Processing Flow","title":"1 Overview"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#2-system-control","text":"The processing sequence of Sharpen, SPNR(using MRNR method) and TMNR is changeable, and user can change the processing sequence depends on different camera charateristic to achieve the best image quality.","title":"2 System Control"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#21-parameter-description","text":"Parameter Range Def Description ch_fd Video graph use ch_fd to represent the connected video engine of each channel. User can fine tune parameter of each video engine by setting ch_fd. pipe_mode 0~5 0 Set module processing sequence. 0 : MRNR -> TMNR -> Sharpen 1 : MRNR-> Sharpen -> TMNR 2 : Sharpen -> MRNR -> TMNR 3 : SHP->TMNR->MRNR 4 :?TMNR->MRNR->SHP 5 : TMNR->SHP->MRNR","title":"2.1 Parameter Description"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#22-setting-interface","text":"","title":"2.2 Setting Interface"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#221-proc","text":"","title":"2.2.1 Proc"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpech_fd","text":"[Description] Read or write the current camera channel, and it only needs to set once, the following SHP, MRNR, TMNR parameters will work on this channel. The following proc command will list all ch_fd of the current video engine: [Command] Write : proc command Target Parameter echo [fd ] > /proc/videograph/vpe/ch_fd Fw Internal Pointer Read : cat /proc/videograph/vpe/ch_fd","title":"l /proc/videograph/vpe/ch_fd"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpepipe_mode","text":"[Description] Read or write the executing sequence of SHP, MRNR and TMNR. [Command] Write : proc command Target Parameter echo [pipe_mode ] > /proc/videograph/vpe/pipe_mode src_ppo_idx???????? mrnr_ppi_idx???? mrnr_ppo_idx??? tmnr_ppi_idx????? tmnr_ppo_idx???? shp_ppi_idx???????? shp_ppo_idx??????? sca_ppi_idx Read : cat /proc/videograph/vpe/pipe_mode","title":"l /proc/videograph/vpe/pipe_mode"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#3-spatial-noise-reduction","text":"This is spatial noise reduction module(abbreviation is \u201cSPNR\u201d). It will divide the image into high frequency part and middle frequency part, performing noise reduction process respectively, then combine together to achieve the purpose of noise reduction and retain detail.?","title":"3 Spatial Noise Reduction"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#31-overview","text":"Major processing flow is as follows : Figure 3?1 The SPNR processing flow. Major processing flow : Divide the input image into high frequency image and middle frequency image. Determine and label whether the processing pixel is on the edge. Perform edge smooth process on high frequency image and middle frequency image, respectively. Perform flat region noise reduction process on middle frequency image. Use high/middle frequency image which had performed noise reduction process to reconstruct image.","title":"3.1 Overview"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#32-parameter-description","text":"(The blue text is the part of the parameter difference between this module and the 9831x series, please pay special attention) Table 3?1 SPNR Parameter List Parameter Range Def Description t_y_edge_detection [2][8] 0~1023 161,322,483,447, 419,320,195,130, 108,215,308,272, 246,185,125,100 Y threshold for determining whether the current processing pixel is on the edge. It has eight thresholds mapping to pixel brightness from dark to bright, respectively. [0][0~7] is the threshold from dark to bright for high frequency image. [1][0~7] is the threshold from dark to bright for middle frequency image. t_cb_edge_detection 0~1023 0,249 Cb threshold for determining whether the current processing pixel is on the edge. Only works in middle frequency image. t_cr_edge_detection [2] 0~1023 0,249 Cr threshold for determining whether the current processing pixel is on the edge. Only works in middle frequency image. t_y_edge_smoothing[2][8] 0~255 66,132,161,149, 140,107,80,53, 44,88,103,91, 82,62,51,41 Y threshold for determining whether it will perform smooth process. It has eight thresholds mapping to pixel brightness from dark to bright, respectively. [0][0~7] is the threshold from dark to bright for high frequency image. [1][0~7] is the threshold from dark to bright for middle frequency image. t_cb_edge_smoothing [2] 0~255 0,153 Cb threshold for determining whether it will perform smooth process. Only works in middle frequency image. t_cr_edge_smoothing [2] 0~255 0,153 Cr threshold for determining whether it will perform smooth process. Only works in middle frequency image. nr_strength_y[2] 0~15 {0, 0} The denoise strength of spatial domain on Y channel. [0] is denoise strength for high frequency image. [1] is denoise strength for middle frequency image. nr_strength_c 0~15 {0, 10} The denoise strength of spatial domain on Cb/Cr channel. Only works in middle frequency image. Advance description : l edge_smoothing?: When SPNR performs smooth process, it will calculate weighting sum of neighbor pixels along the edge direction, if the difference between the neighbor pixel and center pixel is larger than threshold, this neighbor pixel will not be used in the smooth process. The smooth process of Y/Cb/Cr are the same.","title":"3.2 Parameter Description"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#33-setting-interface","text":"","title":"3.3 Setting Interface"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#331-proc","text":"","title":"3.3.1 Proc"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpemrnrdump_info","text":"[Description] Read all SPNR(using MRNR method) parameters of the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/mrnr/dump_info Output:","title":"l /proc/videograph/vpe/mrnr/dump_info"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpemrnrmrnr_en","text":"[Description] Read or write the MRNR enable status of the current camera channel. [Command] Write : proc command Target Parameter echo [mrnr_en (0~1)] > /proc/videograph/vpe/mrnr/mrnr_en mrnr_en Read : cat /proc/videograph/vpe/mrnr/mrnr_en Output:","title":"l /proc/videograph/vpe/mrnr/mrnr_en"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpemrnrt_xx_edge_det","text":"[Description] Read or write edge_detection parameters. [Command] Write : proc command Target Parameter echo [t_y_edge_det[0][0] \u2026..[0][7]] > /proc/videograph/vpe/mrnr/ t_y_edge_det_1 t_y_edge_detection[0~7] echo [t_y_edge_det[1][0] \u2026..[1][7]] > /proc/videograph/vpe/mrnr/ t_y_edge_det_2 t_y_edge_detection[8~15] echo [t_cb_edge_det] > /proc/videograph/vpe/mrnr/ t_cb_edge_det t_cb_edge_detection[0~1] echo [t_cr_edge_det] > /proc/videograph/vpe/mrnr/ t_cr_edge_det t_cr_edge_detection[0~1] Read : cat /proc/videograph/vpe/mrnr/ t_y_edge_det_1 cat /proc/videograph/vpe/mrnr/ t_y_edge_det_2 cat /proc/videograph/vpe/mrnr/ t_cb_edge_det_1 cat /proc/videograph/vpe/mrnr/ t_cr_edge_det_1 Output :","title":"l /proc/videograph/vpe/mrnr/t_xx_edge_det"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpemrnrt_xx_edge_smooth","text":"[Description] Read or write edge_smoothing parameters. [Command] Write : proc command Target Parameter echo [t_y_edge_smooth[0][0]] \u2026\u2026..[t_y_edge_smooth [0][7]] > /proc/videograph/vpe/mrnr/ t_y_edge_smooth_1 t_y_edge_ smoothing[0~7] echo [t_y_edge_smooth[1][0] \u2026\u2026.. [t_y_edge_smooth[1] [7]] > /proc/videograph/vpe/mrnr/t_y_edge_smooth_2 t_y_edge_ smoothing[8~16] echo [t_cb_edge_smooth] > /proc/videograph/vpe/mrnr/ t_cb_edge_smooth t_cb_edge_smoothing[0~1] echo [t_cr_edge_smooth] > /proc/videograph/vpe/mrnr/ t_cr_edge_smooth t_cr_edge_ smoothing[0~1] Read : cat /proc/videograph/vpe/mrnr/t_y_edge_smooth_1 cat /proc/videograph/vpe/mrnr/t_y_edge_smooth_2 cat /proc/videograph/vpe/mrnr/t_cb_edge_smooth cat /proc/videograph/vpe/mrnr/t_cr_edge_smooth Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [t_y_edge_smooth[0]] \u2026\u2026.. [t_y_edge_smooth [7]] > /proc/videograph/vpe/mrnr/t_y_edge_smooth_1 \u2026 =============================================================== t_y_edge_smooth1 = t_y_edge_smoothing[0][0] \u2026\u2026\u2026\u2026\u2026. [0][7] t_y_edge_smooth1 = t_y_edge_smoothing [1][0]\u2026\u2026\u2026\u2026\u2026.. [0][7] t_cb_edge_smooth = t_cb_edge_smoothing t_cr_edge_smooth = t_cr_edge_smoothing ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image012.png)**","title":"l /proc/videograph/vpe/mrnr/t_xx_edge_smooth"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpemrnrnr_strength","text":"[Description] Read or write nr_strength parameters on Y/C channel. [Command] Write : proc command Target Parameter echo [strength_y[0]] [strength_y [1]] [strength_c] > /proc/videograph/vpe/mrnr/nr_strength nr_strength_y[0~1], nr_strength_c Read : cat /proc/videograph/vpe/mrnr/ nr_strength Output :","title":"l /proc/videograph/vpe/mrnr/nr_strength"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#332-vendor-api","text":"[Description] Get and set the 2DNR parameters corresponding to current path_id. [Command] ??????? Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_DN_2D, VENDOR_VIDEO_PARAM_MRNR *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_DN_2D, VENDOR_VIDEO_PARAM_MRNR *p_param); [Definition]","title":"3.3.2 Vendor API"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#4-temporal-noise-reduction-tmnr","text":"This is temporal noise reduction module(abbreviation is \u201cTMNR\u201d). The major function is to eliminate temporal noise in the image.","title":"4 Temporal Noise Reduction (TMNR)"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#41-overview","text":"The concept of TMNR algorithm is to determine whether the pixel status is static(MotionLevel=0) or motion(MotionLevel=2) by Motion Detect module. The static region perform 3DNR to reduce the temporal noise, and the motion region will not perform 3DNR to prevent from having ghost, instead, it will perform 2DNR to reduce noise. The transition region between static region and motion region will combine the result of 2DNR and 3DNR by weighting.","title":"4.1 Overview"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#42-parameter-description","text":"(The blue text is the part of the parameter difference between this module and the 9831x series, please pay special attention) Table 4?1 TMNR Parameter List Parameter Range Default Description tmnr_en 0~1 1 TMNR ON/OFF luma_dn_en 0~1 1 Y channel TMNR ON/OFF chroma_dn_en 0~1 1 Cb/Cr channel TMNR ON/OFF tmnr_fcs_en 0~1 0 Temporal de-false color function ON/OFF It only works when \u201cchroma_dn_en\u201d is set to 1. Please refer to advance description. nr_str_y_3d 0~32 8 Y channel temporal NR strength nr_str_y_2d 0~32 16 Y channel spatial NR strength of motion object nr_str _c_3d 0~32 16 Cb/Cr channel temporal NR strength nr_str _c_2d 0~32 16 Cb/Cr channel spatial NR strength of motion object blur_str_y 0~2 1 Y image blurred strength 0: No blur 1: low-strength blur 2: high-strength blur \u203bIt is recommend to set enable, if the executing sequence of 3DNR is after Sharpness; otherwise, it is recommend to set disable. For DVR/NVR application, due to in most case the front-end camera had perfomed sharpen process, it is recommend to set 1. center_wzero_y_2d_en 0~1 1 Set to enable represents when performing the 2DNR, the weighting of center point is 0. It will increase NR strength, but might lose detail. Due to 2DNR only works on motion region, the detail loss is not obvious, it is recommend to fix enable. center_wzero_y_3d_en 0~1 1 Set to enable represents when performing 3DNR, the weighting of center point is 0. It is recommend to fix enable. small_vibrat_supp_y_en 0~1 0 Y channel small vibration suppresiioon ON/OFF. This function will enhance suppression on small vibration noise to make the image more stable. However, it also causes slower ghost removal. It is recommend to enable at normal luminance, and disable at dark luminance. avoid_residue_th_y 1~4 2 Upper threshold for Y channel small noise putting back. If err_compen sate = 0, bigger this value will cause smaller temporal noise. On the other hand, if err_compensate = 1, bigger this value will cause bigger temporal noise. avoid_residue_th_c 1~4 1 Upper threshold for Vb/Cr channel small noise putting back. If err_compensate = 0, bigger this value will cause smaller temporal noise. On the other hand, if err_compensate = 1, bigger this value will cause bigger temporal noise. display_motion_map_en 0~1 0 Debug mode. Show motion detection result on the image to assist to judge the correctness of motion detect parameters. Please refer to advance description. motion_map_channel 0~4 0 Select debug signal channel. 0: Y channel 1: Cb channel 2: Cr channel 3: temporal de-false color Cb channel 4: temporal de-false color Cr channel y_base[8] 0~16320 {146,147,107,110,102,104,104,104} y_base[0]-[7] are NoiseSAD mapping to pixel brightness from dark to bright. When performing 2DNR, the internal algorithm will automatically fine tune strength based on y_base. The larger the y_base, the stronger strength of 2DNR of motion object. It is recommend to increase y_base as sensor gain increases. motion_level_th_y_k1 0~32 8 Threshold (motion_level_th_y_k1*Y_NOISE) for determining transition region on Y channel. Y_NOISE please refer to advance description. motion_level_th_y_k2 0~32 8 Threshold (motion_level_th_y_k2*Y_NOISE) for determining motion region on Y channel. K2 must larger or equal to K1. y_coefa[8] 0~48 {0,0,0,0,0,0,0,0} The slope of NoiseSAD from flat region to detail region on Y channel. y_coefa[0]-[7] mapping to pixel brightness from dark to bright. y_coefb[8] 0~16320 {27,27,20,12,7,10,10,10} NoiseSAD of flat region on Y channel. y_coefb[0]-[7] mapping to pixel brightness from dark to bright. y_std[8] 0~16320 {20,70,70,70,70,50,28,18} The standard deviation of NoiseSAD on Y channel. y_std[0]-[7] mapping to pixel brightness from dark to bright. motion_level_th_c_k1 0~32 8 Threshold for determining transition region on Cb/Cr channel. motion_level_th_c_k2 0~32 8 Threshold for determining motion region on Cb/Cr channel, K2 must larger or equal to K1. cb_mean[8] 0~6375 {33,33,34,32,29,28,28,28} The NoiseSAD mean value on Cb channel. cb_mean[0]-[7] mapping to pixel brightness from dark to bright. cb_std[8] 0~6375 {10,9,10,10,9,9,9,9} The standard deviation of NoiseSAD on Cb channel. cb_std[0]-[7] mapping to pixel brightness from dark to bright. cr_mean[8] 0~6375 {23,23,25,23,20,20,21,21} The NoiseSAD mean value on Cr channel. cr_mean[0]-[7] mapping to pixel brightness from dark to bright. cr_std[8] 0~6375 {7,7,8,7,7,77,7} The standard deviation of NoiseSAD on Cr channel. cr_std[0]-[7] mapping to pixel brightness from dark to bright. lut_y_3d_1_Th[4] 0~127 {11,33,55,77} Lut of Y channel 3D_1 filter Please refer to advance description. lut_y _3d_2_Th[4] 0~127 {40,14,7,3} Lut of Y channel 3D_2 filter Please refer to advance description. lut_y_2d_Th[4] 0~127 {11,33,55,77} Lut of Y channel 2D filter Please refer to advance description. lut_c_3d_Th[4] 0~127 {37,19,11,7} Lut of Cb/Cr channel 3D filter Please refer to advance description. lut_c_2d_Th[4] 0~127 {11,33,55,77} Lut of Cb/Cr channel 2D filter Please refer to advance description. tmnr_fcs_str 0~15 4 The strength of temporal de-false color function. tmnr_fcs_th 0~255 32 Threshold for the difference between the previous frame and the current frame to determine whether it is false color. dithering_en 0~1 1 Dithering enable. This function can be used to eliminate slight power noise or flicker phenomenon. dithering_bit_y 0~3 2 Y channel random bit number. The higher the value, the stronger the ability to eliminate the power noiser and filcker phenomenon, but the picture may appear larger fine noise. dithering_bit_u 0~3 1 U channel random bit number. The higher the value, the stronger the ability to eliminate the power noiser and filcker phenomenon, but the picture may appear larger fine noise. dithering_bit_v 0~3 1 V channel random bit number. The higher the value, the stronger the ability to eliminate the power noiser and filcker phenomenon, but the picture may appear larger fine noise. err_compensate 0~1 1 YC Compression error compensation. 0: Antiflicker mode. (Larger anti-flicker effect) 1: Compensation mode. (Data Compression Error Compensation) Advance Description: l tmnr_fcs_en: Temporal de-false color ON/OFF. This function will eliminate color-flash phenomenon in high frequency region. FCS off FCS on l display_motion_map_en: \u3002 Motion region will label with red color, static region will label with black color, and transition region will label with white color. Original image Motion Map l Y_NOISE : Block SAD is the summation of pixel difference between the previous frame and current frame at the same location. If the Block SAD is larger than K2 NoiseSAD_STD(NoiseSAD_STD is the input parameter), it determines as motion region. If the Block SAD is smaller than K1 NoiseSAD_STD, it determines as static region. If the Block SAD is larger than K1*NoiseSAD_STD and smaller than K2*NoiseSAD_STD, it determines as transition region. As follows : l Cb_NOISE, Cr_NOISE: Different from Y channel, the NoiseSAD of Cb/Cr channel has no relationship with detail. Therefore, it has no slope parameter. l lut_Y_3d_1_Th: Weighting Lut for stage 1 3DNR on Y channel, the x-axis is delta difference of neighbor pixel, the y-axis is weighting. As the following figure, the larger the difference, the smaller the weighting. The smaller the difference, the larger the weighting. Then, based on each weighting to perform weighting sum. l lut_Y_3d_2_Th: Weighting Lut for Stage 2 3DNR on Y channel, the x-axis is difference of the reference point between the previous frame and current frame, the y-axis is weighting. As the following figure, those with smaller difference might be static region, and set smaller weighting, the output will close to the reference frame. On the contrast, those with larger difference might be motion region, and set larger weighting, the output will close to the current frame. l lut_Y_2d_Th: Weighting Lut of neighbor pixel for 2DNR on Y channel, the x-axis is difference, the y-axis is weighting. As the following figure, the larger the difference, the smaller the weighting. The smaller the difference, the larger the weighting. Then, based on each weighting to perform weighting sum. l lut_c_3d_Th: Suppression Level Lut for 3DNR on Cb/Cr channel, the x-axis is the difference of the reference point between the previous frame and current frame, the y-axis is the suppression level. The concept is the same with \u201c LUT_Y_3d_2_Th \u201d. l lut_c_2d_Th: Weighting Lut of neighbor pixel for 2DNR on Cb/Cr channel, the x-axis is difference, the y-axis is weighting. The concept is the same with \u201c lut_Y_2d_Th \u201d.","title":"4.2 Parameter description"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#43-setting-interface","text":"","title":"4.3 Setting Interface"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#431-proc","text":"","title":"4.3.1 Proc"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrdump_info","text":"[Description] Read all parameters of the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/tmnr/dump_info Output :","title":"l /proc/videograph/vpe/tmnr/dump_info"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrch_en_status","text":"[Description] Read or write the enable status of the current channel. [Command] Write : proc command Target Parameter echo [luma_en] [chroma_en] [fcs_en] > /proc/videograph/vpe/tmnr/ch_en_status luma_dn_en chroma_dn_en tmnr_fcs_en Read : cat /proc/videograph/vpe/tmnr/ch_en_status Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [luma_en] [chroma_en] [fcs_en] > /proc/videograph/vpe/tmnr/ch_en_status =============================================================== luma_en = luma_dn_en chroma_en = chroma_dn_en fcs_en = tmnr_fcs_en ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image027.png)**","title":"l /proc/videograph/vpe/tmnr/ch_en_status"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrnr_strength","text":"[Description] Read or write the TMNR strength of the current channel. [Command] Write : proc command Target Parameter echo [y_3d_str] [y_2d_str] [c_3d_str] [c_2d_str] > /proc/videograph/vpe/tmnr/nr_strength nr_str_y_3d, nr_str_y_2d nr_str_c_3d, nr_str_c_2d Read : cat /proc/videograph/vpe/tmnr/nr_strength Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_3d_str] [y_2d_str] [c_3d_str] [c_2d_str] > /proc/videograph/vpe/tmnr//proc/videograph/vpe/tmnr/nr_strength =============================================================== nr_str_y_3d = nr_str_y_3d nr_str_y_2d = nr_str_y_2d nr_str_c_3d = nr_str_c_3d nr_str_c_2d = nr_str_c_2d ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image028.png)**","title":"l /proc/videograph/vpe/tmnr/nr_strength"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnry_base","text":"[Description] Read or write the base noise level of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_base0] [y_base1]\u2026\u2026\u2026[y_base7] > /proc/videograph/vpe/tmnr/y_base y_base[0]~[7] Read : cat /proc/videograph/vpe/tmnr/y_base Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_base0] [y_base1]\u2026\u2026\u2026[y_base7] > /proc/videograph/vpe/tmnr/y_base =============================================================== TMNR Noise Y_base = y_base[0]\u2026\u2026\u2026\u2026y_base[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image029.png)**","title":"l /proc/videograph/vpe/tmnr/y_base"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrmotion_level_th","text":"[Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_k1] [y_k2] [c_k1] [c_k2] > /proc/videograph/vpe/tmnr/motion_level_th motion_level_th_y_k1 motion_level_th_y_k2 motion_level_th_c_k1 motion_level_th_c_k2 Read : cat /proc/videograph/vpe/tmnr/motion_level_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_k1] [y_k2] [c_k1] [c_k2] > /proc/videograph/vpe/tmnr/motion_level_th =============================================================== TMNR motion level th = motion_level_th_y_k1, motion_level_th_y_k2, motion_level_th_c_k1, motion_level_th_c_k2, ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image030.png)**","title":"l /proc/videograph/vpe/tmnr/motion_level_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnry_coeffa","text":"[Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_coeffa0] [y_coeffa1]\u2026\u2026\u2026[y_coeffa7] > /proc/videograph/vpe/tmnr/y_coeffa y_coeffa[0]~[7] Read : cat /proc/videograph/vpe/tmnr/y_coeffa Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_coeffa0] [y_coeffa1]\u2026\u2026\u2026[y_coeffa7] > /proc/videograph/vpe/tmnr/y_coeffa =============================================================== TMNR Noise model y_coeffa = y_coeffa[0]\u2026\u2026\u2026\u2026y_coeffa[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image031.png)**","title":"l /proc/videograph/vpe/tmnr/y_coeffa"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnry_coeffb","text":"[Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_coeffb0] [y_coeffb1]\u2026\u2026\u2026[y_coeffb7] > /proc/videograph/vpe/tmnr/y_coeffb y_coeffb[0]~[7] Read : cat /proc/videograph/vpe/tmnr/y_coeffb Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_coeffb0] [y_coeffb1]\u2026\u2026\u2026[y_coeffb7] > /proc/videograph/vpe/tmnr/y_coeffb =============================================================== TMNR Noise model y_coeffb = y_coeffb[0]\u2026\u2026\u2026\u2026y_coeffb[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image032.png)**","title":"l /proc/videograph/vpe/tmnr/y_coeffb"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnry_std","text":"[Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [y_std0] [y_std1]\u2026\u2026\u2026[y_std7] > /proc/videograph/vpe/tmnr/y_std y_std[0]~[7] Read : cat /proc/videograph/vpe/tmnr/y_std Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [y_std0] [y_std1]\u2026\u2026\u2026[y_std7] > /proc/videograph/vpe/tmnr/y_std =============================================================== TMNR Noise model y_std = y_std[0]\u2026\u2026\u2026\u2026y_std[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image033.png)**","title":"l /proc/videograph/vpe/tmnr/y_std"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrcb_mean","text":"[Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [cb_mean0] [cb_mean1]\u2026\u2026\u2026[cb_mean 7] > /proc/videograph/vpe/tmnr/cb_mean cb_mean[0]~[7] Read : cat /proc/videograph/vpe/tmnr/cb_mean Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [cb_mean0] [cb_mean1]\u2026\u2026\u2026[cb_mean 7] > /proc/videograph/vpe/tmnr/cb_mean =============================================================== TMNR Noise model cb_mean = cb_mean[0]\u2026\u2026\u2026\u2026cb_mean[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image034.png)**","title":"l /proc/videograph/vpe/tmnr/cb_mean"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrcb_std","text":"[Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [cb_std0] [cb_std1]\u2026\u2026\u2026[cb_std7] > /proc/videograph/vpe/tmnr/cb_std cb_std[0]~[7] Read : cat /proc/videograph/vpe/tmnr/cb_std Output :","title":"l /proc/videograph/vpe/tmnr/cb_std"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrcr_mean","text":"[Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [cr_mean0] [cr_mean1]\u2026\u2026\u2026[cr_std7] > /proc/videograph/vpe/tmnr/cr_mean cr_std[0]~[7] Read : cat /proc/videograph/vpe/tmnr/cr_mean Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [cr_mean0] [cr_mean1]\u2026\u2026\u2026[cr_std7] > /proc/videograph/vpe/tmnr/cr_mean =============================================================== TMNR Noise model cr_mean = cr_mean[0]\u2026\u2026\u2026\u2026cr_mean[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image036.png)**","title":"l /proc/videograph/vpe/tmnr/cr_mean"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrcr_std","text":"[Description] Read or write the noise model parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [cr_std0] [cr_std1]\u2026\u2026\u2026[cr_std7] ] > /proc/videograph/vpe/tmnr/cr_std cr_std[0]~[7] Read : cat /proc/videograph/vpe/tmnr/cr_std Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [cr_std0] [cr_std1]\u2026\u2026\u2026[cr_std7] > /proc/videograph/vpe/tmnr/cr_std =============================================================== TMNR Noise model cr_std = cr_std[0]\u2026\u2026\u2026\u2026cr_std[7] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image037.png)**","title":"l /proc/videograph/vpe/tmnr/cr_std"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrlut_y_3d_1_th","text":"[Description] Read or write the 3D noise reduction parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_y_3d_1_th lut_y_3d_1_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_y_3d_1_th Output :","title":"l /proc/videograph/vpe/tmnr/lut_y_3d_1_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrlut_y_3d_2_th","text":"[Description] Read or write the 3D noise reduction parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_y_3d_2_th lut_y_3d_2_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_y_3d_2_th Output :","title":"l /proc/videograph/vpe/tmnr/lut_y_3d_2_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrlut_y_2d_th","text":"[Description] Read or write the 2D noise reduction parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_y_2d_th lut_y_2d_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_y_2d_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_y_2d_th =============================================================== TMNR lut_y_2d_th = lut_y_2d_th[0]\u2026th[3] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image040.png)**","title":"l /proc/videograph/vpe/tmnr/lut_y_2d_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrlut_c_3d_th","text":"[Description] Read or write the 3D noise reduction parameters of 3DNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_c_3d_th lut_c_3d_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_c_3d_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_c_3d_th =============================================================== TMNR lut_c_3d_th = lut_c_3d_th[0]\u2026th[3] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image041.png)**","title":"l /proc/videograph/vpe/tmnr/lut_c_3d_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrlut_c_2d_th","text":"[Description] Read or write the 2D noise reduction parameters of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_c_2d_th lut_c_2d_th[0]~[3] Read : cat /proc/videograph/vpe/tmnr/lut_c_2d_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th0] [th1] [th2] [th3] > /proc/videograph/vpe/tmnr/lut_c_2d_th =============================================================== TMNR lut_c_3d_th = lut_c_2d_th[0]\u2026th[3] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image042.png)**","title":"l /proc/videograph/vpe/tmnr/lut_c_2d_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrfcs_str","text":"[Description] Read or write the false color suppression strength of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [fcs_str (0~15) ] > /proc/videograph/vpe/tmnr/fcs_str tmnr_fcs_str Read : cat /proc/videograph/vpe/tmnr/fcs_str Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [fcs_str (0~15) ] > /proc/videograph/vpe/tmnr/fcs_str =============================================================== TMNR FCS strength = tmnr_fcs_str ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image043.png)**","title":"l /proc/videograph/vpe/tmnr/fcs_str"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrfcs_th","text":"[Description] Read or write the threshold for determining whether it is false color of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [fcs_th (0~255) ] > /proc/videograph/vpe/tmnr/fcs_th tmnr_fcs_th Read : cat /proc/videograph/vpe/tmnr/fcs_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [fcs_th (0~255) ] > /proc/videograph/vpe/tmnr/fcs_th =============================================================== TMNR FCS th = tmnr_fcs_th ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image044.png)**","title":"l /proc/videograph/vpe/tmnr/fcs_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrmotion_map","text":"[Description] Read or write the motion map of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [map_en (0~1)] > [map_idx] > /proc/videograph/vpe/tmnr/motion_map map_en: 0: display_motion_map_en = 0 1: display_motion_map_en = 1 map_idx : ?0: motion_map_channel=Y ?1: motion_map_channel=Cb 2: motion_map_channel=Cr 3: motion_map_channel=FCS_Cb 4: motion_map_channel=FCS_Cr display_motion_map_en, motion_map_channel Read : cat /proc/videograph/vpe/tmnr/motion_map Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [map_en (0~1)] [map_idx (0~4)] > /proc/videograph/vpe/tmnr/motion_map =============================================================== TMNR motion_map : map_en = display_motion_map_en map_channel = motion_map_channel ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image045.png)**","title":"l /proc/videograph/vpe/tmnr/motion_map"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrdiff_blur_str","text":"[Description] Read or write the Diff. image blur strength of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [str (0~2)] > /proc/videograph/vpe/tmnr/diff_blur_str str: blur strength 0 ~2 blur_str_y Read : cat /proc/videograph/vpe/tmnr/diff_blur_str Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [str (0~2)] > /proc/videograph/vpe/tmnr/diff_blur_str =============================================================== diff_blur_str = blur_str_y ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image046.png)**","title":"l /proc/videograph/vpe/tmnr/diff_blur_str"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnravoid_residue_th","text":"[Description] Read or write the Diff. image blur strength of TMNR of the current channel. [Command] Write : proc command Target Parameter echo [avoid_residue_th_y (1~4)] [avoid_residue_th_c (1~4)] > /proc/videograph/vpe/tmnr/avoid_residue_th avoid_residue_th_y, avoid_residue_th_c Read : cat /proc/videograph/vpe/tmnr/avoid_residue_th Output :","title":"l /proc/videograph/vpe/tmnr/avoid_residue_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrdithering","text":"[Description] Read or write the dithering relative parameters of the current channel. [Command] Write : proc command Target Parameter echo [dithering_en (0~1)] [dithering_bit_y (0~7)] [dithering_bit_u (0~7)] [dithering_bit_v (0~7)] > /proc/videograph/vpe/tmnr/dithering dithering_en dithering_bit_y dithering_bit_u dithering_bit_v Read : cat /proc/videograph/vpe/tmnr/ dithering Output :","title":"l /proc/videograph/vpe/tmnr/dithering"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpetmnrerr_compensate","text":"[Description] Read or write the err_compensate parameter of the current channel. [Command] Write : proc command Target Parameter echo [err_compensate (0~1)] > /proc/videograph/vpe/tmnr/err_compensate err_compensate Read : cat /proc/videograph/vpe/tmnr/err_compensate Output :","title":"l /proc/videograph/vpe/tmnr/err_compensate"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#432-vendor-api","text":"[Description] Get and set the TMNR parameters corresponding to current path_id. [Command] ??????? Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_TMNR_CTRL, VENDOR_VIDEO_PARAM_TMNR_EXT *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_DN_2D, VENDOR_VIDEO_PARAM_TMNR_EXT *p_param); [Definition]","title":"4.3.2 Vendor API"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#5-sharpen-shp","text":"This is texture enhancement module.","title":"5 Sharpen (SHP)"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#51-overview","text":"This algorithm adopts inverse gamma information and after gamma information to perform texture enhancement, respectively, to improve the enhancement strength not smooth problem of the bright/dark region. Besides, it adopts 3x3 and 5x5 filter to enhance thin edge and thick edge, repectively, to take care of the detail and contrast of image. Calculating \u201cEdge Weight\u201d to determine this is detail region or flat region(thinner edge) and automatically adjusting weighting of detail enhancement result and flat region enhancement result to take care of texture enhancement and avoid noise enhancement. The \u201cHalo clip\u201d is used to control the overshootong phenomenon caused by edge enhancement. The major flow please refer to the following figure: Parameter Description Table 5?1 SHP Parameter List Parameter Range Def Description sharpen_en 0~1 0 Edge enhance ON/OFF edge_weight_src_sel 0~1 0 Select the image source to calculate \u201cEdge Weight \u201d. 0: after gamma, 1: inverse gamma. Please refer to description. edge_weight_th 0~255 2 Threshold for calculating \u201cEdge Weight\u201d, those smaller than threshold will be considered as flat region, and the output all adopt flat region enhancement result. edge_weight_gain 0~255 175 Adjust the weighting of detail enhancement result and flat region(thin edge) enhancement result. Based on the setting of \u201cnoise_level+noise_curve\u201d to adjust EdgeWeight for different pixel brightness. The larger the Edge Weight, the larger weighting of detail enhancement result, repersenting the edge enhance is more stronger(more noise). In the contrast, the smaller the edge weight, the larger weighting of flat region enhancement result, representing the edge enhancement is less stronger. noise_level 0~255 25 Please refer to advance description. noise_curve[17] 0~255 {50, 50, 50, 48, 47, 44, 39, 38, 37, 36, 35, 35, 35, 35, 35, 35, 35} Please refer to advance description. blend_inv_gamma 0~128 64 The blending weight of inverse gamma edge enhancement result and after gamma edge enhancement result. This parameter is equal to adjust the ratio of edge enhancement between bright region and dark region, let the edge enhancement level of bright region and dark region is more even. The larger the value, the stronger strength of bright region enhancement, but the weaker strength of dark region enhancement. edge_sharp_str1 0~255 25 Adjust the strength of thin edge enhancement edge_sharp_str2 0~255 10 Adjust the strength of thick edge enhancement flat_sharp_str 0~255 0 Adjust the strength of flat region(thin detail) enhancement. coring_th 0~255 0 Threshold for determing whether to perform enhancement. For those edge value smaller than threshold, they will not perform edge enhancement to avoid enhancing noise. bright_halo_clip 0~128 32 Remove bright halo edge caused by edge enhancement. The smaller the \u201cbright_halo_clip\u201d, the less bright halo edge, but the sharpness might be decreased. dark_halo_clip 0~128 96 Remove dark halo edge caused by edge enhancement. The smaller the \u201cdark_halo_clip\u201d, the less dark halo edge, but the sharpness might be decreased. Advance description l noise_level, noise_curve[17]: noise_level = noise_level + NoiseofPixel, wherein the NoiseofPixel is the y-axis of noise_curve. The noise_curve may depend on the pixel brightness to set the noise size, respectively. Normally, human eyes are less sensitive to the noise in high bright region; thus, it can set small value to increase the edge enhancement strength to enhance detail. It is recommend to use the following default value. If user want to adjust the noise size at all Y range(0-255), it just needs to adjust noise_level. Noise ? Default value: edge_weight_src_sel =0 noise_curve[17] ={50,50,50,48,47,44,39,38,37,36,35,35,35,35,35,35,35} e More strengthen on detail in bright region to avoid enhancing noise. edge_weight_src_sel =1 noise_curve[17] = {0, 38, 46, 51, 54, 57, 59, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62} e More strengthen on detail in dark region to enhance thin detail, but the noise in dark region will be enhanced, either.","title":"5.1 Overview"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#52-setting-interface","text":"","title":"5.2 Setting Interface"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#521-proc","text":"","title":"5.2.1 Proc"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpendump_info","text":"[Description] Read all Sharpen parameters of the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/sharpen/dump_info","title":"l /proc/videograph/vpe/sharpen/dump_info"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpensharp_en","text":"[Description] Read or write the enable status of the cuurent channel. [Command] Write : proc command Target Parameter echo [ sharp_en (0~1) ] > /proc/videograph/vpe/sharpen/sharp_en sharpen_en Read : cat /proc/videograph/vpe/sharpen/shp_en Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [ sharp_en (0~1) ] > /proc/videograph/vpe/sharpen/sharp_en =============================================================== sharpen_en = sharpen_en ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/sharp_en"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpenedge_weight_src_sel","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [src_sel (0 ~ 1) ] > /proc/videograph/vpe/sharpen/edge_weight_src_sel edge_weight_src_sel Read : cat /proc/videograph/vpe/sharpen/edge_weight_src_sel Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [src_sel (0 ~ 1)] > /proc/videograph/vpe/sharpen/edge_weight_src_sel =============================================================== edge_weight_src_sel = edge_weight_src_sel 0: after gamma 1: before gamma ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/edge_weight_src_sel"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpenedge_weigt_gain","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [gain (0~255) ] > /proc/videograph/vpe/sharpen/edge_weight_gain edge_weight_gain Read : cat /proc/videograph/vpe/sharpen/edge_weight_gain Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [gain (0~255)] > /proc/videograph/vpe/sharpen/edge_weight_gain =============================================================== edge_weight_gain = edge_weight_gain ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/edge_weigt_gain"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpenedge_weight_th","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [th (0~255) ] > /proc/videograph/vpe/sharpen/edge_weight_th edge_weight_th Read : cat /proc/videograph/vpe/sharpen/edge_weight_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th (0~255)] > /proc/videograph/vpe/sharpen/edge_weight_th =============================================================== edge_weight_th = edge_weight_th ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/edge_weight_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpenblend_inv_gamma","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [th (0~128) ] > /proc/videograph/vpe/sharpen/blend_inv_gamma blend_inv_gamma Read : cat /proc/videograph/vpe/sharpen/blend_inv_gamma Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [th (0~128) > /proc/videograph/vpe/sharpen/blend_inv_gamma =============================================================== blend_inv_gamma = blend_inv_gamma ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/blend_inv_gamma"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpenedge_sharp_str","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [str1 (0~255)] [str2 (0~255)] > /proc/videograph/vpe/sharpen/edge_sharp_str edge_sharp_str1 edge_sharp_str2 Read : cat /proc/videograph/vpe/sharpen/edge_sharp_str Output :","title":"l /proc/videograph/vpe/sharpen/edge_sharp_str"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpenflat_sharp_str","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [str (0~255)] > /proc/videograph/vpe/sharpen/flat_sharp_str flat_sharp_str Read : cat /proc/videograph/vpe/sharpen/flat_sharp_str Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [str (0~255)] > /proc/videograph/vpe/sharpen/flat_sharp_str =============================================================== flat_sharp_str = flat_sharp_str ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/flat_sharp_str"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpencoring_th","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [coring_th (0~255)] > /proc/videograph/vpe/sharpen/coring_th coring_th Read : cat /proc/videograph/vpe/sharpen/coring_th Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [coring_th (0~255)] > /proc/videograph/vpe/sharpen/coring_th =============================================================== coring_th = coring_th ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/coring_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpenhalo_clip","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [bright_clip (0~128)] [dark_clip(0~128)] > /proc/videograph/vpe/sharpen/halo_clip bright_halo_clip drak_halo_clip Read : cat /proc/videograph/vpe/sharpen/halo_clip Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [bright_clip (0~128)] [dark_clip(0~128)] > /proc/videograph/vpe/sharpen/halo_clip =============================================================== Bright_halo_clip = bright_halo_clip Dark_halo_clip = dark_halo_clip ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/halo_clip"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpesharpennoise_curve","text":"[Description] Read or write the sharpen parameter of the current channel. [Command] Write : proc command Target Parameter echo [noise_curve[0] (0~255)]\u2026. [noise_curve [16] (0~255)] > /proc/videograph/vpe/sharpen/noise_curve noise_curve[17] Read : cat /proc/videograph/vpe/sharpen/noise_curve Output : **![\u6587\u5b57\u65b9\u584a: Command : echo [noise_curve[0] (0~255)]\u2026. [noise_curve [16] (0~255)] > /proc/videograph/vpe/sharpen/noise_curve =============================================================== noise_curve = noise_curve[0] \u2026\u2026\u2026.noise_curve[16] ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sharpen/noise_curve"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#522-vendor-api","text":"[Description] Get and set the sharpen parameters corresponding to current path_id. [Command] ??????? Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_SHARP, VENDOR_VIDEO_PARAM_SHARP *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_SHARP, VENDOR_VIDEO_PARAM_SHARP *p_param); [ \u5b9a\u7fa9 ]","title":"5.2.2 Vendor API"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#6-edge-smoothing-es","text":"This module is edge smoothing. The main function is to eliminate aliasing in the picture to improve the smoothness of the picture.","title":"6 Edge Smoothing (ES)"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#61-overview","text":"The characteristics of this algorithm are to effectively smooth the edges of the input image, correct the jaggedness in the edge area of the input image, and avoid the Sharpen module to enhance the degree of jaggedness in the image edge again. The algorithm divides the input image into edge area and detail area, calculates the direction of the edge on the edge area, and then performs LPF convolution adaptively along the edge direction to smooth the edge of the image. The Edge Mask can be adjusted to avoid high-frequency areas being blurred due to smoothing. Please refer to the following figure for the main process:","title":"6.1 Overview"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#62-parameter-description","text":"Table 6?1 ES Parameter List Parameter Range Def Description edge_smooth_en 0~1 0 Edge smooth enable edge_smooth_y_edeng_th_lo 0~255 10 Adjust the strength threshold of detail areas in the picture Please refer to the advanced instructions edge_smooth_y_edeng_th_hi 0~255 70 Adjust the strength threshold of the edge area in the picture Please refer to the advanced instructions edge_smooth_y_ew_lo 0~255 2 Adjust the smoothing strength weight of detail areas in the picture Please refer to the advanced instructions edge_smooth_y_ew_hi 0~255 32 Adjust the suppression threshold for the smoothing of high-frequency areas in the picture. The larger the value, the easier it is to determine and smooth the high-frequency area. Therefore, the larger the value, the smoother the high-frequency area, and the smaller the value, the clearer the high-frequency area edge_smooth_y_edi_th 0~63 31 Suppresses the strength of smoothing in the high-frequency region. The larger the value, the stronger the smoothing in the high-frequency region. edge_smooth_y_ds_str 0~7 5 Adjust the strength of the smoothing filter in the picture. The larger the value, the stronger the smoothing degree. Advance description: l edge_smooth_y_edeng_th_lo , edge_smooth_y_edeng_th_hi, edge_smooth_y_ew_lo, edge_smooth_y_ew_hi : The strength of edge smooth is controlled by the edge energy intensity of the input image, where edge_smooth_y_edeng_th_hi and edge_smooth_y_edeng_th_lo are the ranges that set the edge area and the detail area, and edge_smooth_y_ew_hi and edge_smooth_y_ew_lo set the smoothness strength of the edge area and detail area. The larger the number, the stronger of the smoothness. The relationship between the edge area and the detail area is a continuous linear change, and the corresponding relationship is shown in the following figure:","title":"6.2 Parameter Description"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#63-setting-interface","text":"","title":"6.3 Setting Interface"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#631-proc","text":"","title":"6.3.1 Proc"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpeesparam","text":"[Description] Read all edge smoothing parameters of the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/es/param","title":"l /proc/videograph/vpe/es/param"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpeesedge_smooth_en","text":"[Description] Set the edge smooth switch of the current camera channel. [Command] Write : proc command Target Parameter echo [edge_smooth_en (0~1)] > /proc/videograph/vpe/es/edge_smooth_en edge_smooth_en","title":"l /proc/videograph/vpe/es/edge_smooth_en"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpeesedge_smooth_out_sel","text":"[Description] Set the edge smooth debugging switch of the current camera channel. [Command] Write : proc command Target Parameter echo [edge_smooth_out_sel (0~1)] > /proc/videograph/vpe/es/edge_smooth_out_sel edge_smooth_out_sel Read : cat /proc/videograph/vpe/es/edge_smooth_out_sel Output :","title":"l /proc/videograph/vpe/es/edge_smooth_out_sel"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpeesedge_smooth_th","text":"[Description] Set the edge smooth related threshold of the current camera channel. [Command] Write : proc command Target Parameter echo [y_edeng_th_lo (0~255)] [y_edeng_th_hi (0~255)] [y_ew_lo (0~255)] [y_ew_hi (0~255)] > /proc/videograph/vpe/es/edge_smooth_th edge_smooth_y_edeng_th_l edge_smooth_y_edeng_th_hi edge_smooth_y_ew_lo edge_smooth_y_ew_hi Read : cat /proc/videograph/vpe/es/edge_smooth_th Output :","title":"l /proc/videograph/vpe/es/edge_smooth_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpeesedge_smooth_y_edi_th","text":"[Description] Set the edge smooth mask related parameters of the current camera channel. [Command] Write : proc command Target Parameter echo [edge_smooth_y_edi_th (0~63)] > /proc/videograph/vpe/es/edge_smooth_y_edi_th edge_smooth_y_edi_th Read : cat /proc/videograph/vpe/es/edge_smooth_y_edi_th Output :","title":"l /proc/videograph/vpe/es/edge_smooth_y_edi_th"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpeesedge_smooth_y_ds_str","text":"[Description] Sets the filter strength of the edge smooth of the current camera channel. [Command] Write : proc command Target Parameter echo [edge_smooth_y_ds_str (0~7)] > /proc/videograph/vpe/es/edge_smooth_y_ds_str edge_smooth_y_ds_str Read : cat /proc/videograph/vpe/es/edge_smooth_y_ds_str Output :","title":"l /proc/videograph/vpe/es/edge_smooth_y_ds_str"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#632-vendor-api","text":"[Description] Get and set the edge smooth parameters corresponding to current path_id. [Command] Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_EDGE_SMOOTH, VENDOR_VIDEO_PARAM_SHARP *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_EDGE_SMOOTH, VENDOR_VIDEO_PARAM_SHARP *p_param); [Definition]","title":"6.3.2 Vendor API"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#7-scaling-sca","text":"Inupt/Output low pass filter process with different resolution. The recommend maximum scaling down ratio is 8, and the recommend maximum scaling up ratio is 8.","title":"7 Scaling (SCA)"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#71-overview","text":"This is image scaling module, the major concept is interpolation and smooth process.","title":"7.1 Overview"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#72-parameter-description","text":"Table 7?1 SCA Parameter List Parameter Range Def Description sca_y_luma_algo_en 0~3 0 Algorithm select for vertical luma scaler. 0: judge by HW algorithm 1: select the nearest point on the left side 2: select the left side point and perform low pass filter process 3: the same as option 0 It is recommend to set 0. sca_x_luma_algo_en 0~3 0 Algorithm select for horizontal luma scaler. 0: judge by HW algorithm 1: select the nearest point on the left side 2: select the left side point and perform low pass filter process 3: the same as option 0 It is recommend to set 0. sca_y_chroma_algo_en 0~3 0 Algorithm select for vertical chroma scaler. 0: judge by HW algorithm 1: select the nearest point on the left side 2: bilinear interpolation 3: average It is recommend to set 0. sca_x_chroma_algo_en 0~3 0 Algorithm select for horizontal chroma scaler. 0: judge by HW algorithm 1: select the nearest point on the left side 2: bilinear interpolation 3: average It is recommend to set 0. sca_map_sel 0~1 0 Select scaler source mapping format. 0: without 0.5 pixel distance shift(start from the 0th pixel of image image) 1: with 0.5 pixel distance shift(start from the 0.5th pixel of image image) If set to 1, when the size of input image and output image is the same or the size is multiple of 2, the scaling performance of output image will similar to perform low pass filter. It is recommend to set 0. sca_ceffH_0~3 -128~127 [0, 0, 0, 64] LPF coefficient in horizontal direction. Please refer to advance description. \u203bThe software limit range is between -128~127, to reduce memory usage. sca_ceffv_0~3 -128~127 [0, 0, 0, 64] LPF coefficient in vertical direction. Please refer to advance description. \u203bThe software limit range is between -128~127, to reduce memory usage. des_drt 0, 2,3 0 YUV domain transform 0: bypass 2: PC level to TV level (Y: 16~235 / C:16~240) 3: TV level to PC level? (Y: 0~235 C:0~255) 255: decide by job parameter of AP rather than driver (default value is 255, other settings are used for debug) Advance description: l sca_ceffH_0~3, sca_ceffV_0~3: LPF coefficients in horizontal direction and vertical direction. User can adjust LPF coefficients to fine tune sawtooth phenomenon in oblique line caused by scaling. ?Table 7?2 Scaler Low pass filter default parameter list Scaling Ratio (R) HCoef0 HCoef1 HCoef2 HCoef3 VCoef0 VCoef1 VCoef2 VCoef3 \u2267 1x 0 0 0 64 0 0 0 64 1 < R \u2266 1.25x 0 0 3 58 0 0 3 58 1.25 < R \u2266 1.5x 0 0 7 50 0 0 7 50 1.5 < R \u2266 1.75x 0 0 11 42 0 0 11 42 1.75 < R \u2266 2x 0 1 13 36 0 1 13 36 2 < R \u2266 2.25x 0 1 15 32 0 1 15 32 2.25 < R \u2266 2.5x 0 2 15 30 0 2 15 30 2.5 < R \u2266 2.75x 0 3 15 28 0 3 15 28 2.75 < R \u2266 3x 0 4 15 26 0 4 15 26 3 < R \u2266 3.25x 1 4 15 24 1 4 15 24 3.25 < R \u2266 3.5x 1 5 15 22 1 5 15 22 3.5 < R \u2266 3.75x 2 7 14 18 2 7 14 18 3.75 < R \u2266 4x 3 8 13 16 3 8 13 16 4 < R \u2266 5x 4 8 13 14 4 8 13 14 5 < R \u2266 6x 4 9 12 14 4 9 12 14 6x < R \u2266 7x 6 9 11 12 6 9 11 12 7x < R 6 9 11 12 6 9 11 12","title":"7.2 Parameter Description"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#73-setting-interface","text":"","title":"7.3 Setting Interface"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#731-proc","text":"","title":"7.3.1 Proc"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpescaparam","text":"[Description] Read all SCA parameters of the cuurent scaling ratio [Command] Write : Not support. Read : cat /proc/videograph/vpe/sca/param **![\u6587\u5b57\u65b9\u584a: fd(0x00000000) sca_y_luma_algo_en = 0 sca_x_luma_algo_en = 0 sca_y_chroma_algo_en = 0 sca_x_chroma_algo_en = 0 sca_map_sel = 0 sca_1x_param = { 0, 0, 0, 64, 0, 0, 0, 64 } sca_1.25x_param = { 0, 0, 0, 64, 0, 0, 0, 64 } \u2026 ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image057.png)**","title":"l /proc/videograph/vpe/sca/param"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpescactrl_param","text":"[Description] Set SCA controlling parameter for specific ratio. [Command] Write : proc command Target Parameter echo [sca_luma_algo (0~3)] [sca_chroma_algo (0~3)] [sca_map_sel (0~1)] > /proc/videograph/vpe/sca/ctrl_param index: Target ratio The command \u201csca_luma_algo\u201d set parameters \u201csca_y_luma_algo_en\u201d and \u201csca_x_luma_algo_en\u201d at the same time. The command \u201csca_chroma_algo\u201d set parameters \u201csca_y_chroma_algo_en\u201d and \u201csca_x_chroma_algo_en\u201d at the same time. The command \u201csca_map_sel\u201d set \u201csca_map_sel\u201d parameter. Read : Not support","title":"l /proc/videograph/vpe/sca/ctrl_param"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpescalpf_param","text":"[Description] Set SCA low pass filter parameter for specific ratio. [Command] Write : proc command Target Parameter echo [index (0~16)] [coeffH[0]] [coeffH[1]] [coeffH[2]] ]coeffH[3]] [coeffV[0]] [coeffV[1]] [coeffV[2]] [coeffV[3]] (-128 ~ 127) >? /proc/videograph/vpe/sca/lpf_param index: Target ratio coeffH : sca_ceffH[4] coeffV: sca_ceffV[4] \u203bThe software limit range is between -128~127, to reduce memory usage. Read : Not support","title":"l /proc/videograph/vpe/sca/lpf_param"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpescayuv_range","text":"[Description] Read or write YUV range of SCA at each one of the channel. \u203b Parameter can be set by put job of AP depends on channel requests, it is not recommend to be set by this proc command or ioctl to avoid conflicts. This command is used for debugging. [Command] Write : proc command Target Parameter echo [fd range] > /proc/videograph/vpe/sca /yuv_range yuv_range: 0, 2, 3, 255 (disable) \u203bdisable represent AP directly control parameters des_drt Read : cat /proc/videograph/vpe/sca/yuv_range Output : **![\u6587\u5b57\u65b9\u584a: Command : echo < fd range >(0:bypass, 2:TV, 3:PC, 255:diable) =============================================================== fd(0x40000000) yuv range = 0 fd(0x40000001) yuv range = 0 fd(0x40000002) yuv range = 0 fd(0x40000003) yuv range = 0 ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/sca/yuv_range"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#732-vendor-api","text":"[Description] Get and set the scaling parameters corresponding to current path_id. [Command] ??????? Get \uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEO_SCA, VENDOR_VIDEO_PARAM_SCA_SET *p_param); ??????? Set \uff1a HD_RESULT vendor_video_set(HD_PATH_ID path_id, VENDOR_VIDEO_SCA, VENDOR_VIDEO_PARAM_SCA_SET *p_param); [Definition] **![\u6587\u5b57\u65b9\u584a: typedef struct _VENDOR_VIDEO_PARMA_SCA_CTRL { INT32 sca_ceffH[4]; ///< LPF coefficient in horizontal direction INT32 sca_ceffV[4]; ///< LPF coefficient in vertical direction } VENDOR_VIDEO_PARMA_SCA_CTRL; typedef struct _VENDOR_VIDEO_PARAM_SCA_SET { UINT8 sca_y_luma_algo_en; ///< Algorithm select for vertical luma scaler UINT8 sca_x_luma_algo_en; ///< Algorithm select for horizontal luma scaler UINT8 sca_y_chroma_algo_en; ///< Algorithm select for vertical chroma scaler UINT8 sca_x_chroma_algo_en; ///< Algorithm select for horizontal chroma scaler UINT8 sca_map_sel; ///< Scaler source mapping format select VENDOR_VIDEO_PARMA_SCA_CTRL sca_1000x_param; ///< scaling parameter for scaling ratio 1.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_1250x_param; ///< scaling parameter for scaling ratio 1.25x VENDOR_VIDEO_PARMA_SCA_CTRL sca_1500x_param; ///< scaling parameter for scaling ratio 1.50x VENDOR_VIDEO_PARMA_SCA_CTRL sca_1750x_param; ///< scaling parameter for scaling ratio 1.75x VENDOR_VIDEO_PARMA_SCA_CTRL sca_2000x_param; ///< scaling parameter for scaling ratio 2.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_2250x_param; ///< scaling parameter for scaling ratio 2.25x VENDOR_VIDEO_PARMA_SCA_CTRL sca_2500x_param; ///< scaling parameter for scaling ratio 2.50x VENDOR_VIDEO_PARMA_SCA_CTRL sca_2750x_param; ///< scaling parameter for scaling ratio 2.75x VENDOR_VIDEO_PARMA_SCA_CTRL sca_3000x_param; ///< scaling parameter for scaling ratio 3.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_3250x_param; ///< scaling parameter for scaling ratio 3.25x VENDOR_VIDEO_PARMA_SCA_CTRL sca_3500x_param; ///< scaling parameter for scaling ratio 3.50x VENDOR_VIDEO_PARMA_SCA_CTRL sca_3750x_param; ///< scaling parameter for scaling ratio 3.75x VENDOR_VIDEO_PARMA_SCA_CTRL sca_4000x_param; ///< scaling parameter for scaling ratio 4.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_5000x_param; ///< scaling parameter for scaling ratio 5.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_6000x_param; ///< scaling parameter for scaling ratio 6.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_7000x_param; ///< scaling parameter for scaling ratio 7.00x VENDOR_VIDEO_PARMA_SCA_CTRL sca_8000x_param; ///< scaling parameter for scaling ratio 8.00x } VENDOR_VIDEO_PARAM_SCA_SET; ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image058.png)**","title":"7.3.2 Vendor API"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#8-distortion-correction-engine-dce","text":"","title":"8 Distortion Correction Engine (DCE)"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#81-overview","text":"This is lens distortion calibration module, it can perform calibration on wide-angle lens and fish-eye lens.","title":"8.1 Overview"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#82-dce-parameter-description","text":"Table 8?1 DCE Parameter List Parameter Range Def Description dce_mode 0~1 0 Select distortion function 0: GDC lens calibration 1: 2DLUT self-define XY coordinate distortion lut2d_sz 0~5 0 Size selection of 2D look-up table. The larger the size, the more precision to describe distortion. 0: 9x9 3: 65x65 4: 129x129 5: 257x257 lsb_rand 0~1 0 LSB 2 bit random generation for internal 10 bit->8 bit image. 0: fixed fill 0 1: random generate 0~3 fovbound 0~1 0 FOV boundary process method selection. When the distortion result can not fill the total output image, select different way to proceed the exceed range. 0: Replace out of boundary pixels with duplicate nearest pixel 1: Replace out of boundary pixels with bound pixels boundy 0~1023 0 Bound value for Y component(u8.2) boundu 0~1023 0 Bound value for U component(u8.2) boundv 0~1023 0 Bound value for V component(u8.2) cent_x_s 213-1 0 Define lens center of x-axis. It is recommend to set width/2. cent_y_s 213-1 0 Define lens center of y-axis. It is recommend to set height/2. xdist 0~4095 0 X input distance factor, for oval shape modeling. It is recommend to set 4095, which is suitable for most situation. ydist 0~4095 0 Y input distance factor, for oval shape modeling. It is recommend to set 4095, which is suitable for most situation. geo_lut 0~65535 0 The GEO deformation gain table, a total of 65 points, indicates the magnification of each pixel in the image at a different distance from the deformation center (magnification = 65535 * input radius / output radius), the gainbase is 65535, please refer to Note 2 for the gain table example. Value range\uff1a[0, 65535]\u3002 normfact 0~255 128 Radius normalization factor. Normfact = 1 << (normbit + 7) / R2 normbit 0~31 31 Radius normalization shift bit. R2 = (width/2)2+(height/2)2 The total bit number of R2 is normbit. Example: 9602+5402 = 1213200 (21 bits) fovgain 0~4095 0 Adjust the scaling ratio of the final distortion coordinate to preserve FOV. Scale down factor for FOV preservation. Due to it will effect the calibration performance, it is recommend to set 1024. hfact 0 ~ 224 -1 0 Horizontal scaling factor for 2DLut scaling up(u0.24). ((2DLUT horizontal pixel number \u2013 1) << 24) / (width \u2013 1) vfact 0 ~ 224 -1 0 Vertical scaling factor for 2DLut scaling up(u0.24). ((2DLUT vertical pixel number \u2013 1) << 24) / (height \u2013 1) xofs_i 0~127 0 2DLut x offset, integer part. It is recommend to set 0, if user need to adjust the DCE performance, user need to change the 2DLUT value. xofs_f 0~224-1 0 2DLut x offset, fraction part. It is recommend to set 0, if user need to adjust the DCE performance, user need to change the 2DLUT value. yofs_i 0~127 0 2DLut y offset, integer part. It is recommend to set 0, if user need to adjust the DCE performance, user need to change the 2DLUT value. yofs_f 0~224-1 0 2DLut y offset, fraction part. It is recommend to set 0, if user need to adjust the DCE performance, user need to change the 2DLUT value. [Note 1] Adjust geo_fov_gain, the left side is 1024, the right side is 1320, you can observe the increase in the field of view on the right side. ? [Note 2] The example of the GEO deformation gain table, from left to right, corresponds to the deformation amount from the center of the image to the edge. This parameter group indicates that the larger the deformation amount toward the edge is. This example is a barrel deformation correction. R is the distance from the center of the image to each point. This distance can be understood as the radius of the circle. Ri represents the radius of each point of the input (before correction) image. Ro represents the radius of each point of the output (corrected) image. RoMax represents the longest distance from the center of the output image to the four corners. If the center of the image falls at 1/2 of the width and height, the four corners are all equal, and they are the longest distances.","title":"8.2 DCE Parameter Description"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#83-setting-interface","text":"","title":"8.3 Setting Interface"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#831-proc","text":"","title":"8.3.1 Proc"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpedcedump_info","text":"[Description] Read all DCE parameters at the current camera channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/dce/dump_info **![\u6587\u5b57\u65b9\u584a: dce_en = 0 dce_mode = 1 lut2d_sz = 3 lut2d_vaddr = 0x0000000000000000 lut2d_paddr = 0x0 lsb_rand = 0 fovbound = 1 boundy = 512 boundu = 512 boundv = 512 cent_x_s = 720 cent_y_s = 720 xdist = 4095 ydist = 4095 normfact = 0 normbit = 0 fovgain = 1024 hfact = 745654 vfact = 745654 xofs_i = 0 xofs_f = 0 yofs_i = 0 yofs_f = 0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 geo_lut[i]=0 ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image053.png)**","title":"l /proc/videograph/vpe/dce/dump_info"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpedcech_en","text":"[Description] Read or write the enable status of the current channel. [Command] Write : proc command Target Parameter echo [ dc_en 0~1 ] > /proc/videograph/vpe/dce/ch_en dc_en Read : cat /proc/videograph/vpe/dce/ch_en Output :","title":"l /proc/videograph/vpe/dce/ch_en"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#832-vendor-api","text":"[Description] Get and set the dce parameters corresponding to current path_id. [Command] ??????? Get\uff1a HD_RESULT vendor_video_get(HD_PATH_ID path_id, VENDOR_VIDEOPROC_DEWARP_INFO, VENDOR_DEWARP_INFO *p_param); ??????? Set\uff1a HD_RESULT c(HD_PATH_ID path_id, VENDOR_ VENDOR_VIDEOPROC_DEWARP_INFO, VENDOR_DEWARP_INFO *p_param); [Define] **![\u6587\u5b57\u65b9\u584a: typedef struct _VENDOR_DEWARP_CTRL { BOOL dc_enable; BOOL dctg_enable; } VENDOR_DEWARP_CTRL; typedef enum _VENDOR_DEWARP_MODE { VENDOR_DEWARP_DEWARP_MODE_GDC = 0, VENDOR_DEWARP_DEWARP_MODE_2DLUT = 1, ENUM_DUMMY4WORD(VENDOR_DEWARP_DEWARP_MODE) } VENDOR_DEWARP_MODE; typedef struct _VENDOR_DEWARP_DGC_PARM { INT32 cent_x_s; ///< Lens center of x axis (signed) INT32 cent_y_s; ///< Lens center of y axis (signed) UINT32 lens_r; ///< Radius of Lens UINT32 xdist; ///< X input distance factor, for oval shape modeling UINT32 ydist; ///< Y input distance factor, for oval shape modeling UINT8 normfact; ///< Radius normalization factor (u1.7) UINT8 normbit; ///< Radius normalization shift bit UINT16 geo_lut[VENDOR_GEO_LUT_X]; ///< GDC look-up table } VENDOR_DEWARP_DGC_PARM; typedef struct _VENDOR_DEWARP_2DLUT_PARM { UINT8 lut2d_sz; ///< Size selection of 2D look-up table, 0:9x9, 3:65x65 UINT32 hfact; ///< Horizontal scaling factor for 2DLut scaling up (u0.24) UINT32 vfact; ///< Vertical scaling factor for 2DLut scaling up (u0.24) UINT8 xofs_i; ///< 2DLUT x offset, integer part UINT32 xofs_f; ///< 2DLUT x offset, fraction part UINT8 yofs_i; ///< 2DLUT y offset, integer part UINT32 yofs_f; ///< 2DLUT xy offset, fraction part } VENDOR_DEWARP_2DLUT_PARM; typedef struct _VENDOR_DEWARP_FOV_PARM { UINT8 fovbound; ///< FOV boundary process method selection UINT16 boundy; ///< Bound value for Y component (u8.2) UINT16 boundu; ///< Bound value for U component (u8.2) UINT16 boundv; ///< Bound value for V component (u8.2) UINT16 fovgain; ///< Scale down factor for FOV preservation (u2.10) } VENDOR_DEWARP_FOV_PARM; ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image064.png)** **![\u6587\u5b57\u65b9\u584a: typedef struct _VENDOR_DEWARP_INFO { VENDOR_DEWARP_MODE mode; VENDOR_DEWARP_DGC_PARM dgc; VENDOR_DEWARP_2DLUT_PARM lut2d; VENDOR_DEWARP_FOV_PARM fov; } VENDOR_DEWARP_INFO; typedef struct _VENDOR_DEWARP_2DLUT_TABLE { UINT32 tbl[VENDOR_GEO_LUT]; } VENDOR_DEWARP_2DLUT_TABLE; ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image058.png)**","title":"8.3.2 Vendor API"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#9-dc-table-generatordctg","text":"","title":"9 DC Table Generator(DCTG)"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#91-overview","text":"For perspective projection application, in order to increase the convenience of usage, DCTG module let user to set the desired angle and size with an instinct way to generate DCTG parameters automatically. Whenever this function is enabled, manual set DCE 2D-LUT function will be invalid. [Note] ??When using DCTG function, user needs to set two parameters enable, one is dc_enable, the other is dctg_en. Please refer to the following description: The \u201ctheta\u201d is the top/bottom angle. The \u201cphi\u201d is the rotate angle. The \u201crot_y\u201d is the rotate offset of (x, z) plane towards Y-axis. The \u201crot_z\u201d is the rotate offset of (x, y) plane towards Z-axis. Generate LUT: Define the rotate angle of FOV by phi_st/phi_ed, and then rotate to FOV location by rot_y. Define the top/bottom angle of FOV by theta_st/theta_ed, and then rotate to FOV location by rot_z.","title":"9.1 Overview"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#92-parameter-description","text":"Table 9?1 DCTG parameter list Parameter Range Def Description dctg_en 0-1 0 DCTG ON/OFF mount_type 0~1 0 Camera mount type. 0: Ceiling mount 1: Floor mount lut2d_sz 0, 3 3 Select size of 2D look-up table, this parameter must the same with DCE parameter. 0: 9x9 3: 65x65 lens_r 0~215-1 0 Valid radius of fish-eye lens, the unit is pixel. Please refer to advance description. lens_x_st 0~214-1 0 The start x position of fish-eye lens at the source image, the unit is pixel. lens_y_st 0~214-1 0 The start y position of fish-eye lens at the source image, the unit is pixel. theta_st -180 ~ 180 (-*pi ~ *pi) 0 FOV theta start radian. theta_ed -180 ~ 180 (-*pi ~ *pi) 0 FOV theta end radian. theta_end > theta_st: normal image theta_end < theta_st: flip image phi_st -360 ~ 360 (-2*pi ~ 2*pi) 0 OV phi start radian. phi_ed -360 ~ 360 (-2*pi ~ 2*pi) 0 FOV phi end radian. (-2*pi ~ 2*pi) phi_end > theta_st: normal image phi_end < theta_st: flip image rot_z -360 ~ 360 (-2*pi ~ 2*pi) 0 Z-axis rotate radian rot_y -360 ~ 360 (-2*pi ~ 2*pi) 0 Y-zxis rotate radian. Advance description: l lens_r: The valid radius of fish-eye device. l lens_x_st : The start x position of fish-eye lens at the source image, the unit is pixel. l lens_y_st : The start y position of fish-eye lens at the source image, the unit is pixel.","title":"9.2 Parameter Description"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#93-setting-interface","text":"","title":"9.3 Setting Interface"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#931-proc","text":"","title":"9.3.1 Proc"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpedctgdump_info","text":"[Description] Read all dctg parameters of the current channel. [Command] Write : Not support. Read : cat /proc/videograph/vpe/dctg/dump_info","title":"l /proc/videograph/vpe/dctg/dump_info"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpedctgch_en","text":"[Description] ??????? Set dctg enable. [Command] Write : proc command Target Parameter echo [dctg_en] > /proc/videograph/vpe/dctg/ch_en dctg_en: dctg enable Read : cat /proc/videograph/vpe/dctg/ch_en Output :","title":"l /proc/videograph/vpe/dctg/ch_en"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpedctgphi","text":"[Description] Set FOV phi start radian [Command] Write : proc command Target Parameter echo [st] [ed] > /proc/videograph/vpe/dctg/phi st: FOV phi start radian ed : FOV phi end radian \u203bangle range: -360 ~ 360 Read : cat /proc/videograph/vpe/dctg/phi Output :","title":"l /proc/videograph/vpe/dctg/phi"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpedctgrot","text":"[Description] Set Z-axis and Y-zxis rotate radian. [Command] Write : proc command Target Parameter echo [z] [y] > /prc/videograph/vpe/dctg/rot z: Z-axis rotate radian. y: Y-zxis rotate radian \u203bangle range: -360 ~ 360 Read : cat /proc/videograph/vpe/dctg/rot Output :","title":"l /proc/videograph/vpe/dctg/rot"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#l-procvideographvpedctgtheta","text":"[Description] Set FOV theta start radian. [Command] Write : proc command \u76ee\u6a19\u53c3\u6578 echo [st] [ed] > /prc/videograph/vpe/dctg/theta st: FOV theta start radian. ed : FOV theta end radian \u203bangle range: -180 ~ 180 Read : cat /proc/videograph/vpe/dctg/theta Output :","title":"l /proc/videograph/vpe/dctg/theta"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#932-vendor-api","text":"[Description] Get and set the dctg parameters corresponding to current path_id. [Command] ??????? Get\uff1a HD_RESULT vendor_videoproc_get(HD_PATH_ID path_id, VENDOR_VIDEOPROC_DEWARP_DCTG_INFO, VENDOR_DEWARP_DCTG_INFO *p_param); ??????? Set\uff1a HD_RESULT vendor_videoproc_set(HD_PATH_ID path_id, VENDOR_VIDEOPROC_DEWARP_DCTG_INFO, VENDOR_DEWARP_DCTG_INFO *p_param); [Define] **![\u6587\u5b57\u65b9\u584a: typedef struct _VENDOR_DEWARP_CTRL { BOOL dc_enable; BOOL dctg_enable; } VENDOR_DEWARP_CTRL; typedef struct _VENDOR_DEWARP_DCTG_INFO { VENDOR_DEWARP_DCTG_MODE mode; VENDOR_DEWARP_DCTG_LENS_PARM lens; VENDOR_DEWARP_DCTG_FOV_PARM fov; } VENDOR_DEWARP_DCTG_INFO; typedef enum _VENDOR_DEWARP_DCTG_MODE { VENDOR_DEWARP_DCTG_MODE_90 = 0, VENDOR_DEWARP_DCTG_MODE_360 = 1, ENUM_DUMMY4WORD(VENDOR_DEWARP_DCTG_MODE) } VENDOR_DEWARP_DCTG_MODE; typedef struct _VENDOR_DEWARP_DCTG_LENS_PARM { UINT8 mount_type; ///< Camera mount type. 0:Ceiling mount, 1:Floor mount UINT8 lut2d_sz; ///< Size selection of 2D look-up table, 0:9x9, 3:65x65, should the same with DCE setting. UINT32 lens_r; ///< Radius of Lens UINT32 lens_x_st; ///< Lens start x position at a source image UINT32 lens_y_st; ///< Lens start y position at a source image } VENDOR_DEWARP_DCTG_LENS_PARM; typedef struct _VENDOR_DEWARP_DCTG_FOV_PARM { INT32 theta_st; ///< FOV theta start radian (s4.16) Range: - pi ~ pi INT32 theta_ed; ///< FOV theta end radian (s4.16) Range: - pi ~ pi INT32 phi_st; ///< FOV phi start radian (s4.16) Range: -2 pi ~ 2 pi INT32 phi_ed; ///< FOV phi end radian (s4.16) Range: -2 pi ~ 2 pi INT32 rot_z; ///< Z-axis rotate radian (s4.16) Range: -2 pi ~ 2 pi INT32 rot_y; ///< Y-axis rotate radian (s4.16) Range: -2 pi ~ 2 pi } VENDOR_DEWARP_DCTG_FOV_PARM; ](NT9833x_VPE_IQ_Tuning_Guide_en.files/image070.png)**","title":"9.3.2 Vendor API"},{"location":"NT9833x_VPE_IQ_Tuning_Guide_en.html#10-revise-history","text":"Version Date Advisor Description 0.1.00 2021/01/20 Allen Hsu First version. 0.2.00 2021/3/26 Allen Hsu Add description of Vendor command. 0.3.00 2022/4/11 Mina Wang Add description for dce and dctg","title":"10 Revise History"}]}